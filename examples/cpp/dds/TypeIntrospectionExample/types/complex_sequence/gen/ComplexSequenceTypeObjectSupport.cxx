// Copyright 2016 Proyectos y Sistemas de Mantenimiento SL (eProsima).
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*!
 * @file ComplexSequenceTypeObjectSupport.cxx
 * Source file containing the implementation to register the TypeObject representation of the described types in the IDL file
 *
 * This file was generated by the tool fastddsgen.
 */

#include "ComplexSequenceTypeObjectSupport.hpp"

#include <mutex>
#include <string>

#include <fastcdr/xcdr/external.hpp>
#include <fastcdr/xcdr/optional.hpp>
#include <fastdds/dds/domain/DomainParticipantFactory.hpp>
#include <fastdds/dds/log/Log.hpp>
#include <fastdds/dds/xtypes/common.hpp>
#include <fastdds/dds/xtypes/type_representation/ITypeObjectRegistry.hpp>
#include <fastdds/dds/xtypes/type_representation/TypeObject.hpp>
#include <fastdds/dds/xtypes/type_representation/TypeObjectUtils.hpp>

#include "ComplexSequence.hpp"


using namespace eprosima::fastdds::dds::xtypes;

void register_ComplexSequence_type_objects()
{
    static std::once_flag once_flag;
    std::call_once(once_flag, []()
            {
                register_InternalSequencePoints_TypeIntrospectionExample_type_identifier();

                register_InternalSequenceMessage_TypeIntrospectionExample_type_identifier();

                register_ComplexSequence_TypeIntrospectionExample_type_identifier();

            });
}

void register_InternalSequencePoints_TypeIntrospectionExample_type_identifier()
{
    {
        StructTypeFlag struct_flags_InternalSequencePoints_TypeIntrospectionExample = TypeObjectUtils::build_struct_type_flag(eprosima::fastdds::dds::xtypes::ExtensibilityKind::NOT_APPLIED,
                false, false);
        ReturnCode_t return_code_InternalSequencePoints_TypeIntrospectionExample;
        TypeIdentifierPair type_ids_InternalSequencePoints_TypeIntrospectionExample;
        QualifiedTypeName type_name_InternalSequencePoints_TypeIntrospectionExample = "InternalSequencePoints_TypeIntrospectionExample";
        eprosima::fastcdr::optional<AppliedBuiltinTypeAnnotations> type_ann_builtin_InternalSequencePoints_TypeIntrospectionExample;
        eprosima::fastcdr::optional<AppliedAnnotationSeq> ann_custom_InternalSequencePoints_TypeIntrospectionExample;
        CompleteTypeDetail detail_InternalSequencePoints_TypeIntrospectionExample = TypeObjectUtils::build_complete_type_detail(type_ann_builtin_InternalSequencePoints_TypeIntrospectionExample, ann_custom_InternalSequencePoints_TypeIntrospectionExample, type_name_InternalSequencePoints_TypeIntrospectionExample.to_string());
        CompleteStructHeader header_InternalSequencePoints_TypeIntrospectionExample;
        header_InternalSequencePoints_TypeIntrospectionExample = TypeObjectUtils::build_complete_struct_header(TypeIdentifier(), detail_InternalSequencePoints_TypeIntrospectionExample);
        CompleteStructMemberSeq member_seq_InternalSequencePoints_TypeIntrospectionExample;
        {
            return_code_InternalSequencePoints_TypeIntrospectionExample =
                eprosima::fastdds::dds::DomainParticipantFactory::get_instance()->type_object_registry().get_type_identifiers(
                "_int32_t", type_ids_InternalSequencePoints_TypeIntrospectionExample);

            if (return_code_InternalSequencePoints_TypeIntrospectionExample != eprosima::fastdds::dds::RETCODE_OK)
            {
                EPROSIMA_LOG_ERROR(XTYPES_TYPE_REPRESENTATION,
                        "x_member Structure member TypeIdentifier unknown to TypeObjectRegistry.");
                return;
            }
            StructMemberFlag member_flags_x_member = TypeObjectUtils::build_struct_member_flag(eprosima::fastdds::dds::xtypes::TryConstructKind::NOT_APPLIED,
                    false, false, false, false);
            CommonStructMember common_x_member;
            MemberId member_id_x_member = 0x00000000;
            if (EK_COMPLETE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier1()._d() || TK_NONE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier2()._d() ||
                    (TI_PLAIN_SEQUENCE_SMALL == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier1()._d() &&
                    EK_COMPLETE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier1().seq_sdefn().header().equiv_kind()) ||
                    (TI_PLAIN_SEQUENCE_LARGE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier1()._d() &&
                    EK_COMPLETE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier1().seq_ldefn().header().equiv_kind()) ||
                    (TI_PLAIN_ARRAY_SMALL == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier1()._d() &&
                    EK_COMPLETE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier1().array_sdefn().header().equiv_kind()) ||
                    (TI_PLAIN_ARRAY_LARGE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier1()._d() &&
                    EK_COMPLETE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier1().array_ldefn().header().equiv_kind()) ||
                    (TI_PLAIN_MAP_SMALL == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier1()._d() &&
                    (EK_COMPLETE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier1().map_sdefn().header().equiv_kind() ||
                    EK_COMPLETE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier1().map_sdefn().key_identifier()->_d())) ||
                    (TI_PLAIN_MAP_LARGE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier1()._d() &&
                    (EK_COMPLETE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier1().map_ldefn().header().equiv_kind() ||
                    EK_COMPLETE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier1().map_ldefn().key_identifier()->_d())))
            {
                common_x_member = TypeObjectUtils::build_common_struct_member(member_id_x_member, member_flags_x_member, type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier1());
            }
            else if (EK_COMPLETE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier2()._d() ||
                    (TI_PLAIN_SEQUENCE_SMALL == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier2()._d() &&
                    EK_COMPLETE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier2().seq_sdefn().header().equiv_kind()) ||
                    (TI_PLAIN_SEQUENCE_LARGE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier2()._d() &&
                    EK_COMPLETE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier2().seq_ldefn().header().equiv_kind()) ||
                    (TI_PLAIN_ARRAY_SMALL == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier2()._d() &&
                    EK_COMPLETE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier2().array_sdefn().header().equiv_kind()) ||
                    (TI_PLAIN_ARRAY_LARGE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier2()._d() &&
                    EK_COMPLETE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier2().array_ldefn().header().equiv_kind()) ||
                    (TI_PLAIN_MAP_SMALL == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier2()._d() &&
                    (EK_COMPLETE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier2().map_sdefn().header().equiv_kind() ||
                    EK_COMPLETE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier2().map_sdefn().key_identifier()->_d())) ||
                    (TI_PLAIN_MAP_LARGE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier2()._d() &&
                    (EK_COMPLETE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier2().map_ldefn().header().equiv_kind() ||
                    EK_COMPLETE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier2().map_ldefn().key_identifier()->_d())))
            {
                common_x_member = TypeObjectUtils::build_common_struct_member(member_id_x_member, member_flags_x_member, type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier2());
            }
            else
            {
                EPROSIMA_LOG_ERROR(XTYPES_TYPE_REPRESENTATION,
                        "Structure x_member member TypeIdentifier inconsistent.");
                return;
            }
            MemberName name_x_member = "x_member";
            eprosima::fastcdr::optional<AppliedBuiltinMemberAnnotations> member_ann_builtin_x_member;
            ann_custom_InternalSequencePoints_TypeIntrospectionExample.reset();
            CompleteMemberDetail detail_x_member = TypeObjectUtils::build_complete_member_detail(name_x_member, member_ann_builtin_x_member, ann_custom_InternalSequencePoints_TypeIntrospectionExample);
            CompleteStructMember member_x_member = TypeObjectUtils::build_complete_struct_member(common_x_member, detail_x_member);
            TypeObjectUtils::add_complete_struct_member(member_seq_InternalSequencePoints_TypeIntrospectionExample, member_x_member);
        }
        {
            return_code_InternalSequencePoints_TypeIntrospectionExample =
                eprosima::fastdds::dds::DomainParticipantFactory::get_instance()->type_object_registry().get_type_identifiers(
                "_int32_t", type_ids_InternalSequencePoints_TypeIntrospectionExample);

            if (return_code_InternalSequencePoints_TypeIntrospectionExample != eprosima::fastdds::dds::RETCODE_OK)
            {
                EPROSIMA_LOG_ERROR(XTYPES_TYPE_REPRESENTATION,
                        "y_member Structure member TypeIdentifier unknown to TypeObjectRegistry.");
                return;
            }
            StructMemberFlag member_flags_y_member = TypeObjectUtils::build_struct_member_flag(eprosima::fastdds::dds::xtypes::TryConstructKind::NOT_APPLIED,
                    false, false, false, false);
            CommonStructMember common_y_member;
            MemberId member_id_y_member = 0x00000001;
            if (EK_COMPLETE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier1()._d() || TK_NONE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier2()._d() ||
                    (TI_PLAIN_SEQUENCE_SMALL == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier1()._d() &&
                    EK_COMPLETE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier1().seq_sdefn().header().equiv_kind()) ||
                    (TI_PLAIN_SEQUENCE_LARGE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier1()._d() &&
                    EK_COMPLETE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier1().seq_ldefn().header().equiv_kind()) ||
                    (TI_PLAIN_ARRAY_SMALL == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier1()._d() &&
                    EK_COMPLETE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier1().array_sdefn().header().equiv_kind()) ||
                    (TI_PLAIN_ARRAY_LARGE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier1()._d() &&
                    EK_COMPLETE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier1().array_ldefn().header().equiv_kind()) ||
                    (TI_PLAIN_MAP_SMALL == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier1()._d() &&
                    (EK_COMPLETE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier1().map_sdefn().header().equiv_kind() ||
                    EK_COMPLETE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier1().map_sdefn().key_identifier()->_d())) ||
                    (TI_PLAIN_MAP_LARGE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier1()._d() &&
                    (EK_COMPLETE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier1().map_ldefn().header().equiv_kind() ||
                    EK_COMPLETE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier1().map_ldefn().key_identifier()->_d())))
            {
                common_y_member = TypeObjectUtils::build_common_struct_member(member_id_y_member, member_flags_y_member, type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier1());
            }
            else if (EK_COMPLETE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier2()._d() ||
                    (TI_PLAIN_SEQUENCE_SMALL == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier2()._d() &&
                    EK_COMPLETE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier2().seq_sdefn().header().equiv_kind()) ||
                    (TI_PLAIN_SEQUENCE_LARGE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier2()._d() &&
                    EK_COMPLETE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier2().seq_ldefn().header().equiv_kind()) ||
                    (TI_PLAIN_ARRAY_SMALL == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier2()._d() &&
                    EK_COMPLETE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier2().array_sdefn().header().equiv_kind()) ||
                    (TI_PLAIN_ARRAY_LARGE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier2()._d() &&
                    EK_COMPLETE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier2().array_ldefn().header().equiv_kind()) ||
                    (TI_PLAIN_MAP_SMALL == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier2()._d() &&
                    (EK_COMPLETE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier2().map_sdefn().header().equiv_kind() ||
                    EK_COMPLETE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier2().map_sdefn().key_identifier()->_d())) ||
                    (TI_PLAIN_MAP_LARGE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier2()._d() &&
                    (EK_COMPLETE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier2().map_ldefn().header().equiv_kind() ||
                    EK_COMPLETE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier2().map_ldefn().key_identifier()->_d())))
            {
                common_y_member = TypeObjectUtils::build_common_struct_member(member_id_y_member, member_flags_y_member, type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier2());
            }
            else
            {
                EPROSIMA_LOG_ERROR(XTYPES_TYPE_REPRESENTATION,
                        "Structure y_member member TypeIdentifier inconsistent.");
                return;
            }
            MemberName name_y_member = "y_member";
            eprosima::fastcdr::optional<AppliedBuiltinMemberAnnotations> member_ann_builtin_y_member;
            ann_custom_InternalSequencePoints_TypeIntrospectionExample.reset();
            CompleteMemberDetail detail_y_member = TypeObjectUtils::build_complete_member_detail(name_y_member, member_ann_builtin_y_member, ann_custom_InternalSequencePoints_TypeIntrospectionExample);
            CompleteStructMember member_y_member = TypeObjectUtils::build_complete_struct_member(common_y_member, detail_y_member);
            TypeObjectUtils::add_complete_struct_member(member_seq_InternalSequencePoints_TypeIntrospectionExample, member_y_member);
        }
        {
            return_code_InternalSequencePoints_TypeIntrospectionExample =
                eprosima::fastdds::dds::DomainParticipantFactory::get_instance()->type_object_registry().get_type_identifiers(
                "_int32_t", type_ids_InternalSequencePoints_TypeIntrospectionExample);

            if (return_code_InternalSequencePoints_TypeIntrospectionExample != eprosima::fastdds::dds::RETCODE_OK)
            {
                EPROSIMA_LOG_ERROR(XTYPES_TYPE_REPRESENTATION,
                        "z_member Structure member TypeIdentifier unknown to TypeObjectRegistry.");
                return;
            }
            StructMemberFlag member_flags_z_member = TypeObjectUtils::build_struct_member_flag(eprosima::fastdds::dds::xtypes::TryConstructKind::NOT_APPLIED,
                    false, false, false, false);
            CommonStructMember common_z_member;
            MemberId member_id_z_member = 0x00000002;
            if (EK_COMPLETE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier1()._d() || TK_NONE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier2()._d() ||
                    (TI_PLAIN_SEQUENCE_SMALL == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier1()._d() &&
                    EK_COMPLETE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier1().seq_sdefn().header().equiv_kind()) ||
                    (TI_PLAIN_SEQUENCE_LARGE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier1()._d() &&
                    EK_COMPLETE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier1().seq_ldefn().header().equiv_kind()) ||
                    (TI_PLAIN_ARRAY_SMALL == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier1()._d() &&
                    EK_COMPLETE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier1().array_sdefn().header().equiv_kind()) ||
                    (TI_PLAIN_ARRAY_LARGE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier1()._d() &&
                    EK_COMPLETE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier1().array_ldefn().header().equiv_kind()) ||
                    (TI_PLAIN_MAP_SMALL == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier1()._d() &&
                    (EK_COMPLETE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier1().map_sdefn().header().equiv_kind() ||
                    EK_COMPLETE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier1().map_sdefn().key_identifier()->_d())) ||
                    (TI_PLAIN_MAP_LARGE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier1()._d() &&
                    (EK_COMPLETE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier1().map_ldefn().header().equiv_kind() ||
                    EK_COMPLETE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier1().map_ldefn().key_identifier()->_d())))
            {
                common_z_member = TypeObjectUtils::build_common_struct_member(member_id_z_member, member_flags_z_member, type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier1());
            }
            else if (EK_COMPLETE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier2()._d() ||
                    (TI_PLAIN_SEQUENCE_SMALL == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier2()._d() &&
                    EK_COMPLETE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier2().seq_sdefn().header().equiv_kind()) ||
                    (TI_PLAIN_SEQUENCE_LARGE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier2()._d() &&
                    EK_COMPLETE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier2().seq_ldefn().header().equiv_kind()) ||
                    (TI_PLAIN_ARRAY_SMALL == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier2()._d() &&
                    EK_COMPLETE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier2().array_sdefn().header().equiv_kind()) ||
                    (TI_PLAIN_ARRAY_LARGE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier2()._d() &&
                    EK_COMPLETE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier2().array_ldefn().header().equiv_kind()) ||
                    (TI_PLAIN_MAP_SMALL == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier2()._d() &&
                    (EK_COMPLETE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier2().map_sdefn().header().equiv_kind() ||
                    EK_COMPLETE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier2().map_sdefn().key_identifier()->_d())) ||
                    (TI_PLAIN_MAP_LARGE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier2()._d() &&
                    (EK_COMPLETE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier2().map_ldefn().header().equiv_kind() ||
                    EK_COMPLETE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier2().map_ldefn().key_identifier()->_d())))
            {
                common_z_member = TypeObjectUtils::build_common_struct_member(member_id_z_member, member_flags_z_member, type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier2());
            }
            else
            {
                EPROSIMA_LOG_ERROR(XTYPES_TYPE_REPRESENTATION,
                        "Structure z_member member TypeIdentifier inconsistent.");
                return;
            }
            MemberName name_z_member = "z_member";
            eprosima::fastcdr::optional<AppliedBuiltinMemberAnnotations> member_ann_builtin_z_member;
            ann_custom_InternalSequencePoints_TypeIntrospectionExample.reset();
            CompleteMemberDetail detail_z_member = TypeObjectUtils::build_complete_member_detail(name_z_member, member_ann_builtin_z_member, ann_custom_InternalSequencePoints_TypeIntrospectionExample);
            CompleteStructMember member_z_member = TypeObjectUtils::build_complete_struct_member(common_z_member, detail_z_member);
            TypeObjectUtils::add_complete_struct_member(member_seq_InternalSequencePoints_TypeIntrospectionExample, member_z_member);
        }
        CompleteStructType struct_type_InternalSequencePoints_TypeIntrospectionExample = TypeObjectUtils::build_complete_struct_type(struct_flags_InternalSequencePoints_TypeIntrospectionExample, header_InternalSequencePoints_TypeIntrospectionExample, member_seq_InternalSequencePoints_TypeIntrospectionExample);
        if (eprosima::fastdds::dds::RETCODE_BAD_PARAMETER ==
                TypeObjectUtils::build_and_register_struct_type_object(struct_type_InternalSequencePoints_TypeIntrospectionExample, type_name_InternalSequencePoints_TypeIntrospectionExample.to_string()))
        {
            EPROSIMA_LOG_ERROR(XTYPES_TYPE_REPRESENTATION,
                    "InternalSequencePoints_TypeIntrospectionExample already registered in TypeObjectRegistry for a different type.");
        }
        return_code_InternalSequencePoints_TypeIntrospectionExample =
            eprosima::fastdds::dds::DomainParticipantFactory::get_instance()->type_object_registry().get_type_identifiers(
            "InternalSequencePoints_TypeIntrospectionExample", type_ids_InternalSequencePoints_TypeIntrospectionExample);
        if (return_code_InternalSequencePoints_TypeIntrospectionExample != eprosima::fastdds::dds::RETCODE_OK)
        {
            EPROSIMA_LOG_ERROR(XTYPES_TYPE_REPRESENTATION,
                        "InternalSequencePoints_TypeIntrospectionExample: Given Struct TypeIdentifier unknown to TypeObjectRegistry.");
            return;
        }
    }
}
void register_InternalSequenceMessage_TypeIntrospectionExample_type_identifier()
{
    {
        StructTypeFlag struct_flags_InternalSequenceMessage_TypeIntrospectionExample = TypeObjectUtils::build_struct_type_flag(eprosima::fastdds::dds::xtypes::ExtensibilityKind::NOT_APPLIED,
                false, false);
        ReturnCode_t return_code_InternalSequenceMessage_TypeIntrospectionExample;
        TypeIdentifierPair type_ids_InternalSequenceMessage_TypeIntrospectionExample;
        QualifiedTypeName type_name_InternalSequenceMessage_TypeIntrospectionExample = "InternalSequenceMessage_TypeIntrospectionExample";
        eprosima::fastcdr::optional<AppliedBuiltinTypeAnnotations> type_ann_builtin_InternalSequenceMessage_TypeIntrospectionExample;
        eprosima::fastcdr::optional<AppliedAnnotationSeq> ann_custom_InternalSequenceMessage_TypeIntrospectionExample;
        CompleteTypeDetail detail_InternalSequenceMessage_TypeIntrospectionExample = TypeObjectUtils::build_complete_type_detail(type_ann_builtin_InternalSequenceMessage_TypeIntrospectionExample, ann_custom_InternalSequenceMessage_TypeIntrospectionExample, type_name_InternalSequenceMessage_TypeIntrospectionExample.to_string());
        CompleteStructHeader header_InternalSequenceMessage_TypeIntrospectionExample;
        header_InternalSequenceMessage_TypeIntrospectionExample = TypeObjectUtils::build_complete_struct_header(TypeIdentifier(), detail_InternalSequenceMessage_TypeIntrospectionExample);
        CompleteStructMemberSeq member_seq_InternalSequenceMessage_TypeIntrospectionExample;
        {
            return_code_InternalSequenceMessage_TypeIntrospectionExample =
                eprosima::fastdds::dds::DomainParticipantFactory::get_instance()->type_object_registry().get_type_identifiers(
                "anonymous_string_unbounded", type_ids_InternalSequenceMessage_TypeIntrospectionExample);

            if (return_code_InternalSequenceMessage_TypeIntrospectionExample != eprosima::fastdds::dds::RETCODE_OK)
            {
                std::string type_id_kind_anonymous_string_unbounded("TI_STRING8_SMALL");
                if (type_id_kind_anonymous_string_unbounded == "TI_STRING8_SMALL")
                {
                    SBound bound = 0;
                    StringSTypeDefn string_sdefn = TypeObjectUtils::build_string_s_type_defn(bound);
                    if (eprosima::fastdds::dds::RETCODE_BAD_PARAMETER ==
                            TypeObjectUtils::build_and_register_s_string_type_identifier(string_sdefn,
                            "anonymous_string_unbounded"))
                    {
                        EPROSIMA_LOG_ERROR(XTYPES_TYPE_REPRESENTATION,
                            "anonymous_string_unbounded already registered in TypeObjectRegistry for a different type.");
                    }
                }
                else if (type_id_kind_anonymous_string_unbounded == "TI_STRING8_LARGE")
                {
                    LBound bound = 255;
                    StringLTypeDefn string_ldefn = TypeObjectUtils::build_string_l_type_defn(bound);
                    if (eprosima::fastdds::dds::RETCODE_BAD_PARAMETER ==
                            TypeObjectUtils::build_and_register_l_string_type_identifier(string_ldefn,
                            "anonymous_string_unbounded"))
                    {
                        EPROSIMA_LOG_ERROR(XTYPES_TYPE_REPRESENTATION,
                            "anonymous_string_unbounded already registered in TypeObjectRegistry for a different type.");
                    }
                }
                else
                {
                    EPROSIMA_LOG_ERROR(XTYPES_TYPE_REPRESENTATION,
                                "anonymous_string_unbounded: Unknown String kind.");
                    return;
                }
                return_code_InternalSequenceMessage_TypeIntrospectionExample =
                    eprosima::fastdds::dds::DomainParticipantFactory::get_instance()->type_object_registry().get_type_identifiers(
                    "anonymous_string_unbounded", type_ids_InternalSequenceMessage_TypeIntrospectionExample);
                if (return_code_InternalSequenceMessage_TypeIntrospectionExample != eprosima::fastdds::dds::RETCODE_OK)
                {
                    EPROSIMA_LOG_ERROR(XTYPES_TYPE_REPRESENTATION,
                                "anonymous_string_unbounded: Given String TypeIdentifier unknown to TypeObjectRegistry.");
                    return;
                }
            }
            StructMemberFlag member_flags_message = TypeObjectUtils::build_struct_member_flag(eprosima::fastdds::dds::xtypes::TryConstructKind::NOT_APPLIED,
                    false, false, false, false);
            CommonStructMember common_message;
            MemberId member_id_message = 0x00000000;
            if (EK_COMPLETE == type_ids_InternalSequenceMessage_TypeIntrospectionExample.type_identifier1()._d() || TK_NONE == type_ids_InternalSequenceMessage_TypeIntrospectionExample.type_identifier2()._d() ||
                    (TI_PLAIN_SEQUENCE_SMALL == type_ids_InternalSequenceMessage_TypeIntrospectionExample.type_identifier1()._d() &&
                    EK_COMPLETE == type_ids_InternalSequenceMessage_TypeIntrospectionExample.type_identifier1().seq_sdefn().header().equiv_kind()) ||
                    (TI_PLAIN_SEQUENCE_LARGE == type_ids_InternalSequenceMessage_TypeIntrospectionExample.type_identifier1()._d() &&
                    EK_COMPLETE == type_ids_InternalSequenceMessage_TypeIntrospectionExample.type_identifier1().seq_ldefn().header().equiv_kind()) ||
                    (TI_PLAIN_ARRAY_SMALL == type_ids_InternalSequenceMessage_TypeIntrospectionExample.type_identifier1()._d() &&
                    EK_COMPLETE == type_ids_InternalSequenceMessage_TypeIntrospectionExample.type_identifier1().array_sdefn().header().equiv_kind()) ||
                    (TI_PLAIN_ARRAY_LARGE == type_ids_InternalSequenceMessage_TypeIntrospectionExample.type_identifier1()._d() &&
                    EK_COMPLETE == type_ids_InternalSequenceMessage_TypeIntrospectionExample.type_identifier1().array_ldefn().header().equiv_kind()) ||
                    (TI_PLAIN_MAP_SMALL == type_ids_InternalSequenceMessage_TypeIntrospectionExample.type_identifier1()._d() &&
                    (EK_COMPLETE == type_ids_InternalSequenceMessage_TypeIntrospectionExample.type_identifier1().map_sdefn().header().equiv_kind() ||
                    EK_COMPLETE == type_ids_InternalSequenceMessage_TypeIntrospectionExample.type_identifier1().map_sdefn().key_identifier()->_d())) ||
                    (TI_PLAIN_MAP_LARGE == type_ids_InternalSequenceMessage_TypeIntrospectionExample.type_identifier1()._d() &&
                    (EK_COMPLETE == type_ids_InternalSequenceMessage_TypeIntrospectionExample.type_identifier1().map_ldefn().header().equiv_kind() ||
                    EK_COMPLETE == type_ids_InternalSequenceMessage_TypeIntrospectionExample.type_identifier1().map_ldefn().key_identifier()->_d())))
            {
                common_message = TypeObjectUtils::build_common_struct_member(member_id_message, member_flags_message, type_ids_InternalSequenceMessage_TypeIntrospectionExample.type_identifier1());
            }
            else if (EK_COMPLETE == type_ids_InternalSequenceMessage_TypeIntrospectionExample.type_identifier2()._d() ||
                    (TI_PLAIN_SEQUENCE_SMALL == type_ids_InternalSequenceMessage_TypeIntrospectionExample.type_identifier2()._d() &&
                    EK_COMPLETE == type_ids_InternalSequenceMessage_TypeIntrospectionExample.type_identifier2().seq_sdefn().header().equiv_kind()) ||
                    (TI_PLAIN_SEQUENCE_LARGE == type_ids_InternalSequenceMessage_TypeIntrospectionExample.type_identifier2()._d() &&
                    EK_COMPLETE == type_ids_InternalSequenceMessage_TypeIntrospectionExample.type_identifier2().seq_ldefn().header().equiv_kind()) ||
                    (TI_PLAIN_ARRAY_SMALL == type_ids_InternalSequenceMessage_TypeIntrospectionExample.type_identifier2()._d() &&
                    EK_COMPLETE == type_ids_InternalSequenceMessage_TypeIntrospectionExample.type_identifier2().array_sdefn().header().equiv_kind()) ||
                    (TI_PLAIN_ARRAY_LARGE == type_ids_InternalSequenceMessage_TypeIntrospectionExample.type_identifier2()._d() &&
                    EK_COMPLETE == type_ids_InternalSequenceMessage_TypeIntrospectionExample.type_identifier2().array_ldefn().header().equiv_kind()) ||
                    (TI_PLAIN_MAP_SMALL == type_ids_InternalSequenceMessage_TypeIntrospectionExample.type_identifier2()._d() &&
                    (EK_COMPLETE == type_ids_InternalSequenceMessage_TypeIntrospectionExample.type_identifier2().map_sdefn().header().equiv_kind() ||
                    EK_COMPLETE == type_ids_InternalSequenceMessage_TypeIntrospectionExample.type_identifier2().map_sdefn().key_identifier()->_d())) ||
                    (TI_PLAIN_MAP_LARGE == type_ids_InternalSequenceMessage_TypeIntrospectionExample.type_identifier2()._d() &&
                    (EK_COMPLETE == type_ids_InternalSequenceMessage_TypeIntrospectionExample.type_identifier2().map_ldefn().header().equiv_kind() ||
                    EK_COMPLETE == type_ids_InternalSequenceMessage_TypeIntrospectionExample.type_identifier2().map_ldefn().key_identifier()->_d())))
            {
                common_message = TypeObjectUtils::build_common_struct_member(member_id_message, member_flags_message, type_ids_InternalSequenceMessage_TypeIntrospectionExample.type_identifier2());
            }
            else
            {
                EPROSIMA_LOG_ERROR(XTYPES_TYPE_REPRESENTATION,
                        "Structure message member TypeIdentifier inconsistent.");
                return;
            }
            MemberName name_message = "message";
            eprosima::fastcdr::optional<AppliedBuiltinMemberAnnotations> member_ann_builtin_message;
            ann_custom_InternalSequenceMessage_TypeIntrospectionExample.reset();
            CompleteMemberDetail detail_message = TypeObjectUtils::build_complete_member_detail(name_message, member_ann_builtin_message, ann_custom_InternalSequenceMessage_TypeIntrospectionExample);
            CompleteStructMember member_message = TypeObjectUtils::build_complete_struct_member(common_message, detail_message);
            TypeObjectUtils::add_complete_struct_member(member_seq_InternalSequenceMessage_TypeIntrospectionExample, member_message);
        }
        CompleteStructType struct_type_InternalSequenceMessage_TypeIntrospectionExample = TypeObjectUtils::build_complete_struct_type(struct_flags_InternalSequenceMessage_TypeIntrospectionExample, header_InternalSequenceMessage_TypeIntrospectionExample, member_seq_InternalSequenceMessage_TypeIntrospectionExample);
        if (eprosima::fastdds::dds::RETCODE_BAD_PARAMETER ==
                TypeObjectUtils::build_and_register_struct_type_object(struct_type_InternalSequenceMessage_TypeIntrospectionExample, type_name_InternalSequenceMessage_TypeIntrospectionExample.to_string()))
        {
            EPROSIMA_LOG_ERROR(XTYPES_TYPE_REPRESENTATION,
                    "InternalSequenceMessage_TypeIntrospectionExample already registered in TypeObjectRegistry for a different type.");
        }
        return_code_InternalSequenceMessage_TypeIntrospectionExample =
            eprosima::fastdds::dds::DomainParticipantFactory::get_instance()->type_object_registry().get_type_identifiers(
            "InternalSequenceMessage_TypeIntrospectionExample", type_ids_InternalSequenceMessage_TypeIntrospectionExample);
        if (return_code_InternalSequenceMessage_TypeIntrospectionExample != eprosima::fastdds::dds::RETCODE_OK)
        {
            EPROSIMA_LOG_ERROR(XTYPES_TYPE_REPRESENTATION,
                        "InternalSequenceMessage_TypeIntrospectionExample: Given Struct TypeIdentifier unknown to TypeObjectRegistry.");
            return;
        }
    }
}
void register_ComplexSequence_TypeIntrospectionExample_type_identifier()
{
    {
        StructTypeFlag struct_flags_ComplexSequence_TypeIntrospectionExample = TypeObjectUtils::build_struct_type_flag(eprosima::fastdds::dds::xtypes::ExtensibilityKind::NOT_APPLIED,
                false, false);
        ReturnCode_t return_code_ComplexSequence_TypeIntrospectionExample;
        TypeIdentifierPair type_ids_ComplexSequence_TypeIntrospectionExample;
        QualifiedTypeName type_name_ComplexSequence_TypeIntrospectionExample = "ComplexSequence_TypeIntrospectionExample";
        eprosima::fastcdr::optional<AppliedBuiltinTypeAnnotations> type_ann_builtin_ComplexSequence_TypeIntrospectionExample;
        eprosima::fastcdr::optional<AppliedAnnotationSeq> ann_custom_ComplexSequence_TypeIntrospectionExample;
        CompleteTypeDetail detail_ComplexSequence_TypeIntrospectionExample = TypeObjectUtils::build_complete_type_detail(type_ann_builtin_ComplexSequence_TypeIntrospectionExample, ann_custom_ComplexSequence_TypeIntrospectionExample, type_name_ComplexSequence_TypeIntrospectionExample.to_string());
        CompleteStructHeader header_ComplexSequence_TypeIntrospectionExample;
        header_ComplexSequence_TypeIntrospectionExample = TypeObjectUtils::build_complete_struct_header(TypeIdentifier(), detail_ComplexSequence_TypeIntrospectionExample);
        CompleteStructMemberSeq member_seq_ComplexSequence_TypeIntrospectionExample;
        {
            return_code_ComplexSequence_TypeIntrospectionExample =
                eprosima::fastdds::dds::DomainParticipantFactory::get_instance()->type_object_registry().get_type_identifiers(
                "_uint32_t", type_ids_ComplexSequence_TypeIntrospectionExample);

            if (return_code_ComplexSequence_TypeIntrospectionExample != eprosima::fastdds::dds::RETCODE_OK)
            {
                EPROSIMA_LOG_ERROR(XTYPES_TYPE_REPRESENTATION,
                        "index Structure member TypeIdentifier unknown to TypeObjectRegistry.");
                return;
            }
            StructMemberFlag member_flags_index = TypeObjectUtils::build_struct_member_flag(eprosima::fastdds::dds::xtypes::TryConstructKind::NOT_APPLIED,
                    false, false, false, false);
            CommonStructMember common_index;
            MemberId member_id_index = 0x00000000;
            if (EK_COMPLETE == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier1()._d() || TK_NONE == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier2()._d() ||
                    (TI_PLAIN_SEQUENCE_SMALL == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier1()._d() &&
                    EK_COMPLETE == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier1().seq_sdefn().header().equiv_kind()) ||
                    (TI_PLAIN_SEQUENCE_LARGE == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier1()._d() &&
                    EK_COMPLETE == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier1().seq_ldefn().header().equiv_kind()) ||
                    (TI_PLAIN_ARRAY_SMALL == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier1()._d() &&
                    EK_COMPLETE == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier1().array_sdefn().header().equiv_kind()) ||
                    (TI_PLAIN_ARRAY_LARGE == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier1()._d() &&
                    EK_COMPLETE == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier1().array_ldefn().header().equiv_kind()) ||
                    (TI_PLAIN_MAP_SMALL == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier1()._d() &&
                    (EK_COMPLETE == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier1().map_sdefn().header().equiv_kind() ||
                    EK_COMPLETE == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier1().map_sdefn().key_identifier()->_d())) ||
                    (TI_PLAIN_MAP_LARGE == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier1()._d() &&
                    (EK_COMPLETE == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier1().map_ldefn().header().equiv_kind() ||
                    EK_COMPLETE == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier1().map_ldefn().key_identifier()->_d())))
            {
                common_index = TypeObjectUtils::build_common_struct_member(member_id_index, member_flags_index, type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier1());
            }
            else if (EK_COMPLETE == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier2()._d() ||
                    (TI_PLAIN_SEQUENCE_SMALL == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier2()._d() &&
                    EK_COMPLETE == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier2().seq_sdefn().header().equiv_kind()) ||
                    (TI_PLAIN_SEQUENCE_LARGE == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier2()._d() &&
                    EK_COMPLETE == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier2().seq_ldefn().header().equiv_kind()) ||
                    (TI_PLAIN_ARRAY_SMALL == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier2()._d() &&
                    EK_COMPLETE == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier2().array_sdefn().header().equiv_kind()) ||
                    (TI_PLAIN_ARRAY_LARGE == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier2()._d() &&
                    EK_COMPLETE == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier2().array_ldefn().header().equiv_kind()) ||
                    (TI_PLAIN_MAP_SMALL == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier2()._d() &&
                    (EK_COMPLETE == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier2().map_sdefn().header().equiv_kind() ||
                    EK_COMPLETE == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier2().map_sdefn().key_identifier()->_d())) ||
                    (TI_PLAIN_MAP_LARGE == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier2()._d() &&
                    (EK_COMPLETE == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier2().map_ldefn().header().equiv_kind() ||
                    EK_COMPLETE == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier2().map_ldefn().key_identifier()->_d())))
            {
                common_index = TypeObjectUtils::build_common_struct_member(member_id_index, member_flags_index, type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier2());
            }
            else
            {
                EPROSIMA_LOG_ERROR(XTYPES_TYPE_REPRESENTATION,
                        "Structure index member TypeIdentifier inconsistent.");
                return;
            }
            MemberName name_index = "index";
            eprosima::fastcdr::optional<AppliedBuiltinMemberAnnotations> member_ann_builtin_index;
            ann_custom_ComplexSequence_TypeIntrospectionExample.reset();
            CompleteMemberDetail detail_index = TypeObjectUtils::build_complete_member_detail(name_index, member_ann_builtin_index, ann_custom_ComplexSequence_TypeIntrospectionExample);
            CompleteStructMember member_index = TypeObjectUtils::build_complete_struct_member(common_index, detail_index);
            TypeObjectUtils::add_complete_struct_member(member_seq_ComplexSequence_TypeIntrospectionExample, member_index);
        }
        {
            return_code_ComplexSequence_TypeIntrospectionExample =
                eprosima::fastdds::dds::DomainParticipantFactory::get_instance()->type_object_registry().get_type_identifiers(
                "anonymous_sequence_InternalSequencePoints_TypeIntrospectionExample_unbounded", type_ids_ComplexSequence_TypeIntrospectionExample);

            if (return_code_ComplexSequence_TypeIntrospectionExample != eprosima::fastdds::dds::RETCODE_OK)
            {
                return_code_ComplexSequence_TypeIntrospectionExample =
                    eprosima::fastdds::dds::DomainParticipantFactory::get_instance()->type_object_registry().get_type_identifiers(
                    "InternalSequencePoints_TypeIntrospectionExample", type_ids_ComplexSequence_TypeIntrospectionExample);

                if (return_code_ComplexSequence_TypeIntrospectionExample != eprosima::fastdds::dds::RETCODE_OK)
                {
                    {
                        StructTypeFlag struct_flags_InternalSequencePoints_TypeIntrospectionExample = TypeObjectUtils::build_struct_type_flag(eprosima::fastdds::dds::xtypes::ExtensibilityKind::NOT_APPLIED,
                                false, false);
                        ReturnCode_t return_code_InternalSequencePoints_TypeIntrospectionExample;
                        TypeIdentifierPair type_ids_InternalSequencePoints_TypeIntrospectionExample;
                        QualifiedTypeName type_name_InternalSequencePoints_TypeIntrospectionExample = "InternalSequencePoints_TypeIntrospectionExample";
                        eprosima::fastcdr::optional<AppliedBuiltinTypeAnnotations> type_ann_builtin_InternalSequencePoints_TypeIntrospectionExample;
                        eprosima::fastcdr::optional<AppliedAnnotationSeq> ann_custom_InternalSequencePoints_TypeIntrospectionExample;
                        CompleteTypeDetail detail_InternalSequencePoints_TypeIntrospectionExample = TypeObjectUtils::build_complete_type_detail(type_ann_builtin_InternalSequencePoints_TypeIntrospectionExample, ann_custom_InternalSequencePoints_TypeIntrospectionExample, type_name_InternalSequencePoints_TypeIntrospectionExample.to_string());
                        CompleteStructHeader header_InternalSequencePoints_TypeIntrospectionExample;
                        header_InternalSequencePoints_TypeIntrospectionExample = TypeObjectUtils::build_complete_struct_header(TypeIdentifier(), detail_InternalSequencePoints_TypeIntrospectionExample);
                        CompleteStructMemberSeq member_seq_InternalSequencePoints_TypeIntrospectionExample;
                        {
                            return_code_InternalSequencePoints_TypeIntrospectionExample =
                                eprosima::fastdds::dds::DomainParticipantFactory::get_instance()->type_object_registry().get_type_identifiers(
                                "_int32_t", type_ids_InternalSequencePoints_TypeIntrospectionExample);

                            if (return_code_InternalSequencePoints_TypeIntrospectionExample != eprosima::fastdds::dds::RETCODE_OK)
                            {
                                EPROSIMA_LOG_ERROR(XTYPES_TYPE_REPRESENTATION,
                                        "x_member Structure member TypeIdentifier unknown to TypeObjectRegistry.");
                                return;
                            }
                            StructMemberFlag member_flags_x_member = TypeObjectUtils::build_struct_member_flag(eprosima::fastdds::dds::xtypes::TryConstructKind::NOT_APPLIED,
                                    false, false, false, false);
                            CommonStructMember common_x_member;
                            MemberId member_id_x_member = 0x00000000;
                            if (EK_COMPLETE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier1()._d() || TK_NONE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier2()._d() ||
                                    (TI_PLAIN_SEQUENCE_SMALL == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier1()._d() &&
                                    EK_COMPLETE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier1().seq_sdefn().header().equiv_kind()) ||
                                    (TI_PLAIN_SEQUENCE_LARGE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier1()._d() &&
                                    EK_COMPLETE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier1().seq_ldefn().header().equiv_kind()) ||
                                    (TI_PLAIN_ARRAY_SMALL == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier1()._d() &&
                                    EK_COMPLETE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier1().array_sdefn().header().equiv_kind()) ||
                                    (TI_PLAIN_ARRAY_LARGE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier1()._d() &&
                                    EK_COMPLETE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier1().array_ldefn().header().equiv_kind()) ||
                                    (TI_PLAIN_MAP_SMALL == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier1()._d() &&
                                    (EK_COMPLETE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier1().map_sdefn().header().equiv_kind() ||
                                    EK_COMPLETE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier1().map_sdefn().key_identifier()->_d())) ||
                                    (TI_PLAIN_MAP_LARGE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier1()._d() &&
                                    (EK_COMPLETE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier1().map_ldefn().header().equiv_kind() ||
                                    EK_COMPLETE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier1().map_ldefn().key_identifier()->_d())))
                            {
                                common_x_member = TypeObjectUtils::build_common_struct_member(member_id_x_member, member_flags_x_member, type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier1());
                            }
                            else if (EK_COMPLETE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier2()._d() ||
                                    (TI_PLAIN_SEQUENCE_SMALL == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier2()._d() &&
                                    EK_COMPLETE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier2().seq_sdefn().header().equiv_kind()) ||
                                    (TI_PLAIN_SEQUENCE_LARGE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier2()._d() &&
                                    EK_COMPLETE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier2().seq_ldefn().header().equiv_kind()) ||
                                    (TI_PLAIN_ARRAY_SMALL == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier2()._d() &&
                                    EK_COMPLETE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier2().array_sdefn().header().equiv_kind()) ||
                                    (TI_PLAIN_ARRAY_LARGE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier2()._d() &&
                                    EK_COMPLETE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier2().array_ldefn().header().equiv_kind()) ||
                                    (TI_PLAIN_MAP_SMALL == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier2()._d() &&
                                    (EK_COMPLETE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier2().map_sdefn().header().equiv_kind() ||
                                    EK_COMPLETE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier2().map_sdefn().key_identifier()->_d())) ||
                                    (TI_PLAIN_MAP_LARGE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier2()._d() &&
                                    (EK_COMPLETE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier2().map_ldefn().header().equiv_kind() ||
                                    EK_COMPLETE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier2().map_ldefn().key_identifier()->_d())))
                            {
                                common_x_member = TypeObjectUtils::build_common_struct_member(member_id_x_member, member_flags_x_member, type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier2());
                            }
                            else
                            {
                                EPROSIMA_LOG_ERROR(XTYPES_TYPE_REPRESENTATION,
                                        "Structure x_member member TypeIdentifier inconsistent.");
                                return;
                            }
                            MemberName name_x_member = "x_member";
                            eprosima::fastcdr::optional<AppliedBuiltinMemberAnnotations> member_ann_builtin_x_member;
                            ann_custom_InternalSequencePoints_TypeIntrospectionExample.reset();
                            CompleteMemberDetail detail_x_member = TypeObjectUtils::build_complete_member_detail(name_x_member, member_ann_builtin_x_member, ann_custom_InternalSequencePoints_TypeIntrospectionExample);
                            CompleteStructMember member_x_member = TypeObjectUtils::build_complete_struct_member(common_x_member, detail_x_member);
                            TypeObjectUtils::add_complete_struct_member(member_seq_InternalSequencePoints_TypeIntrospectionExample, member_x_member);
                        }
                        {
                            return_code_InternalSequencePoints_TypeIntrospectionExample =
                                eprosima::fastdds::dds::DomainParticipantFactory::get_instance()->type_object_registry().get_type_identifiers(
                                "_int32_t", type_ids_InternalSequencePoints_TypeIntrospectionExample);

                            if (return_code_InternalSequencePoints_TypeIntrospectionExample != eprosima::fastdds::dds::RETCODE_OK)
                            {
                                EPROSIMA_LOG_ERROR(XTYPES_TYPE_REPRESENTATION,
                                        "y_member Structure member TypeIdentifier unknown to TypeObjectRegistry.");
                                return;
                            }
                            StructMemberFlag member_flags_y_member = TypeObjectUtils::build_struct_member_flag(eprosima::fastdds::dds::xtypes::TryConstructKind::NOT_APPLIED,
                                    false, false, false, false);
                            CommonStructMember common_y_member;
                            MemberId member_id_y_member = 0x00000001;
                            if (EK_COMPLETE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier1()._d() || TK_NONE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier2()._d() ||
                                    (TI_PLAIN_SEQUENCE_SMALL == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier1()._d() &&
                                    EK_COMPLETE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier1().seq_sdefn().header().equiv_kind()) ||
                                    (TI_PLAIN_SEQUENCE_LARGE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier1()._d() &&
                                    EK_COMPLETE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier1().seq_ldefn().header().equiv_kind()) ||
                                    (TI_PLAIN_ARRAY_SMALL == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier1()._d() &&
                                    EK_COMPLETE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier1().array_sdefn().header().equiv_kind()) ||
                                    (TI_PLAIN_ARRAY_LARGE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier1()._d() &&
                                    EK_COMPLETE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier1().array_ldefn().header().equiv_kind()) ||
                                    (TI_PLAIN_MAP_SMALL == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier1()._d() &&
                                    (EK_COMPLETE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier1().map_sdefn().header().equiv_kind() ||
                                    EK_COMPLETE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier1().map_sdefn().key_identifier()->_d())) ||
                                    (TI_PLAIN_MAP_LARGE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier1()._d() &&
                                    (EK_COMPLETE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier1().map_ldefn().header().equiv_kind() ||
                                    EK_COMPLETE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier1().map_ldefn().key_identifier()->_d())))
                            {
                                common_y_member = TypeObjectUtils::build_common_struct_member(member_id_y_member, member_flags_y_member, type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier1());
                            }
                            else if (EK_COMPLETE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier2()._d() ||
                                    (TI_PLAIN_SEQUENCE_SMALL == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier2()._d() &&
                                    EK_COMPLETE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier2().seq_sdefn().header().equiv_kind()) ||
                                    (TI_PLAIN_SEQUENCE_LARGE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier2()._d() &&
                                    EK_COMPLETE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier2().seq_ldefn().header().equiv_kind()) ||
                                    (TI_PLAIN_ARRAY_SMALL == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier2()._d() &&
                                    EK_COMPLETE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier2().array_sdefn().header().equiv_kind()) ||
                                    (TI_PLAIN_ARRAY_LARGE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier2()._d() &&
                                    EK_COMPLETE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier2().array_ldefn().header().equiv_kind()) ||
                                    (TI_PLAIN_MAP_SMALL == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier2()._d() &&
                                    (EK_COMPLETE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier2().map_sdefn().header().equiv_kind() ||
                                    EK_COMPLETE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier2().map_sdefn().key_identifier()->_d())) ||
                                    (TI_PLAIN_MAP_LARGE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier2()._d() &&
                                    (EK_COMPLETE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier2().map_ldefn().header().equiv_kind() ||
                                    EK_COMPLETE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier2().map_ldefn().key_identifier()->_d())))
                            {
                                common_y_member = TypeObjectUtils::build_common_struct_member(member_id_y_member, member_flags_y_member, type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier2());
                            }
                            else
                            {
                                EPROSIMA_LOG_ERROR(XTYPES_TYPE_REPRESENTATION,
                                        "Structure y_member member TypeIdentifier inconsistent.");
                                return;
                            }
                            MemberName name_y_member = "y_member";
                            eprosima::fastcdr::optional<AppliedBuiltinMemberAnnotations> member_ann_builtin_y_member;
                            ann_custom_InternalSequencePoints_TypeIntrospectionExample.reset();
                            CompleteMemberDetail detail_y_member = TypeObjectUtils::build_complete_member_detail(name_y_member, member_ann_builtin_y_member, ann_custom_InternalSequencePoints_TypeIntrospectionExample);
                            CompleteStructMember member_y_member = TypeObjectUtils::build_complete_struct_member(common_y_member, detail_y_member);
                            TypeObjectUtils::add_complete_struct_member(member_seq_InternalSequencePoints_TypeIntrospectionExample, member_y_member);
                        }
                        {
                            return_code_InternalSequencePoints_TypeIntrospectionExample =
                                eprosima::fastdds::dds::DomainParticipantFactory::get_instance()->type_object_registry().get_type_identifiers(
                                "_int32_t", type_ids_InternalSequencePoints_TypeIntrospectionExample);

                            if (return_code_InternalSequencePoints_TypeIntrospectionExample != eprosima::fastdds::dds::RETCODE_OK)
                            {
                                EPROSIMA_LOG_ERROR(XTYPES_TYPE_REPRESENTATION,
                                        "z_member Structure member TypeIdentifier unknown to TypeObjectRegistry.");
                                return;
                            }
                            StructMemberFlag member_flags_z_member = TypeObjectUtils::build_struct_member_flag(eprosima::fastdds::dds::xtypes::TryConstructKind::NOT_APPLIED,
                                    false, false, false, false);
                            CommonStructMember common_z_member;
                            MemberId member_id_z_member = 0x00000002;
                            if (EK_COMPLETE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier1()._d() || TK_NONE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier2()._d() ||
                                    (TI_PLAIN_SEQUENCE_SMALL == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier1()._d() &&
                                    EK_COMPLETE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier1().seq_sdefn().header().equiv_kind()) ||
                                    (TI_PLAIN_SEQUENCE_LARGE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier1()._d() &&
                                    EK_COMPLETE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier1().seq_ldefn().header().equiv_kind()) ||
                                    (TI_PLAIN_ARRAY_SMALL == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier1()._d() &&
                                    EK_COMPLETE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier1().array_sdefn().header().equiv_kind()) ||
                                    (TI_PLAIN_ARRAY_LARGE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier1()._d() &&
                                    EK_COMPLETE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier1().array_ldefn().header().equiv_kind()) ||
                                    (TI_PLAIN_MAP_SMALL == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier1()._d() &&
                                    (EK_COMPLETE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier1().map_sdefn().header().equiv_kind() ||
                                    EK_COMPLETE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier1().map_sdefn().key_identifier()->_d())) ||
                                    (TI_PLAIN_MAP_LARGE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier1()._d() &&
                                    (EK_COMPLETE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier1().map_ldefn().header().equiv_kind() ||
                                    EK_COMPLETE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier1().map_ldefn().key_identifier()->_d())))
                            {
                                common_z_member = TypeObjectUtils::build_common_struct_member(member_id_z_member, member_flags_z_member, type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier1());
                            }
                            else if (EK_COMPLETE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier2()._d() ||
                                    (TI_PLAIN_SEQUENCE_SMALL == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier2()._d() &&
                                    EK_COMPLETE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier2().seq_sdefn().header().equiv_kind()) ||
                                    (TI_PLAIN_SEQUENCE_LARGE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier2()._d() &&
                                    EK_COMPLETE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier2().seq_ldefn().header().equiv_kind()) ||
                                    (TI_PLAIN_ARRAY_SMALL == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier2()._d() &&
                                    EK_COMPLETE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier2().array_sdefn().header().equiv_kind()) ||
                                    (TI_PLAIN_ARRAY_LARGE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier2()._d() &&
                                    EK_COMPLETE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier2().array_ldefn().header().equiv_kind()) ||
                                    (TI_PLAIN_MAP_SMALL == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier2()._d() &&
                                    (EK_COMPLETE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier2().map_sdefn().header().equiv_kind() ||
                                    EK_COMPLETE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier2().map_sdefn().key_identifier()->_d())) ||
                                    (TI_PLAIN_MAP_LARGE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier2()._d() &&
                                    (EK_COMPLETE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier2().map_ldefn().header().equiv_kind() ||
                                    EK_COMPLETE == type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier2().map_ldefn().key_identifier()->_d())))
                            {
                                common_z_member = TypeObjectUtils::build_common_struct_member(member_id_z_member, member_flags_z_member, type_ids_InternalSequencePoints_TypeIntrospectionExample.type_identifier2());
                            }
                            else
                            {
                                EPROSIMA_LOG_ERROR(XTYPES_TYPE_REPRESENTATION,
                                        "Structure z_member member TypeIdentifier inconsistent.");
                                return;
                            }
                            MemberName name_z_member = "z_member";
                            eprosima::fastcdr::optional<AppliedBuiltinMemberAnnotations> member_ann_builtin_z_member;
                            ann_custom_InternalSequencePoints_TypeIntrospectionExample.reset();
                            CompleteMemberDetail detail_z_member = TypeObjectUtils::build_complete_member_detail(name_z_member, member_ann_builtin_z_member, ann_custom_InternalSequencePoints_TypeIntrospectionExample);
                            CompleteStructMember member_z_member = TypeObjectUtils::build_complete_struct_member(common_z_member, detail_z_member);
                            TypeObjectUtils::add_complete_struct_member(member_seq_InternalSequencePoints_TypeIntrospectionExample, member_z_member);
                        }
                        CompleteStructType struct_type_InternalSequencePoints_TypeIntrospectionExample = TypeObjectUtils::build_complete_struct_type(struct_flags_InternalSequencePoints_TypeIntrospectionExample, header_InternalSequencePoints_TypeIntrospectionExample, member_seq_InternalSequencePoints_TypeIntrospectionExample);
                        if (eprosima::fastdds::dds::RETCODE_BAD_PARAMETER ==
                                TypeObjectUtils::build_and_register_struct_type_object(struct_type_InternalSequencePoints_TypeIntrospectionExample, type_name_InternalSequencePoints_TypeIntrospectionExample.to_string()))
                        {
                            EPROSIMA_LOG_ERROR(XTYPES_TYPE_REPRESENTATION,
                                    "InternalSequencePoints_TypeIntrospectionExample already registered in TypeObjectRegistry for a different type.");
                        }
                        return_code_InternalSequencePoints_TypeIntrospectionExample =
                            eprosima::fastdds::dds::DomainParticipantFactory::get_instance()->type_object_registry().get_type_identifiers(
                            "InternalSequencePoints_TypeIntrospectionExample", type_ids_InternalSequencePoints_TypeIntrospectionExample);
                        if (return_code_InternalSequencePoints_TypeIntrospectionExample != eprosima::fastdds::dds::RETCODE_OK)
                        {
                            EPROSIMA_LOG_ERROR(XTYPES_TYPE_REPRESENTATION,
                                        "InternalSequencePoints_TypeIntrospectionExample: Given Struct TypeIdentifier unknown to TypeObjectRegistry.");
                            return;
                        }
                    }
                }
                TypeIdentifier* element_identifier_anonymous_sequence_InternalSequencePoints_TypeIntrospectionExample_unbounded {nullptr};
                if (EK_COMPLETE == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier1()._d() || TK_NONE == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier2()._d() ||
                        (TI_PLAIN_SEQUENCE_SMALL == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier1()._d() &&
                        EK_COMPLETE == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier1().seq_sdefn().header().equiv_kind()) ||
                        (TI_PLAIN_SEQUENCE_LARGE == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier1()._d() &&
                        EK_COMPLETE == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier1().seq_ldefn().header().equiv_kind()) ||
                        (TI_PLAIN_ARRAY_SMALL == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier1()._d() &&
                        EK_COMPLETE == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier1().array_sdefn().header().equiv_kind()) ||
                        (TI_PLAIN_ARRAY_LARGE == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier1()._d() &&
                        EK_COMPLETE == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier1().array_ldefn().header().equiv_kind()) ||
                        (TI_PLAIN_MAP_SMALL == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier1()._d() &&
                        (EK_COMPLETE == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier1().map_sdefn().header().equiv_kind() ||
                        EK_COMPLETE == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier1().map_sdefn().key_identifier()->_d())) ||
                        (TI_PLAIN_MAP_LARGE == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier1()._d() &&
                        (EK_COMPLETE == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier1().map_ldefn().header().equiv_kind() ||
                        EK_COMPLETE == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier1().map_ldefn().key_identifier()->_d())))
                {
                    element_identifier_anonymous_sequence_InternalSequencePoints_TypeIntrospectionExample_unbounded = new TypeIdentifier(type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier1());
                }
                else if (EK_COMPLETE == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier2()._d() ||
                        (TI_PLAIN_SEQUENCE_SMALL == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier2()._d() &&
                        EK_COMPLETE == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier2().seq_sdefn().header().equiv_kind()) ||
                        (TI_PLAIN_SEQUENCE_LARGE == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier2()._d() &&
                        EK_COMPLETE == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier2().seq_ldefn().header().equiv_kind()) ||
                        (TI_PLAIN_ARRAY_SMALL == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier2()._d() &&
                        EK_COMPLETE == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier2().array_sdefn().header().equiv_kind()) ||
                        (TI_PLAIN_ARRAY_LARGE == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier2()._d() &&
                        EK_COMPLETE == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier2().array_ldefn().header().equiv_kind()) ||
                        (TI_PLAIN_MAP_SMALL == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier2()._d() &&
                        (EK_COMPLETE == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier2().map_sdefn().header().equiv_kind() ||
                        EK_COMPLETE == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier2().map_sdefn().key_identifier()->_d())) ||
                        (TI_PLAIN_MAP_LARGE == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier2()._d() &&
                        (EK_COMPLETE == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier2().map_ldefn().header().equiv_kind() ||
                        EK_COMPLETE == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier2().map_ldefn().key_identifier()->_d())))
                {
                    element_identifier_anonymous_sequence_InternalSequencePoints_TypeIntrospectionExample_unbounded = new TypeIdentifier(type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier2());
                }
                else
                {
                    EPROSIMA_LOG_ERROR(XTYPES_TYPE_REPRESENTATION,
                        "Sequence element TypeIdentifier inconsistent.");
                    return;
                }
                EquivalenceKind equiv_kind_anonymous_sequence_InternalSequencePoints_TypeIntrospectionExample_unbounded = EK_COMPLETE;
                if (TK_NONE == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier2()._d())
                {
                    equiv_kind_anonymous_sequence_InternalSequencePoints_TypeIntrospectionExample_unbounded = EK_BOTH;
                }
                CollectionElementFlag element_flags_anonymous_sequence_InternalSequencePoints_TypeIntrospectionExample_unbounded = 0;
                PlainCollectionHeader header_anonymous_sequence_InternalSequencePoints_TypeIntrospectionExample_unbounded = TypeObjectUtils::build_plain_collection_header(equiv_kind_anonymous_sequence_InternalSequencePoints_TypeIntrospectionExample_unbounded, element_flags_anonymous_sequence_InternalSequencePoints_TypeIntrospectionExample_unbounded);
                std::string type_id_kind_anonymous_sequence_InternalSequencePoints_TypeIntrospectionExample_unbounded("TI_PLAIN_SEQUENCE_SMALL");
                if (type_id_kind_anonymous_sequence_InternalSequencePoints_TypeIntrospectionExample_unbounded == "TI_PLAIN_SEQUENCE_SMALL")
                {
                    SBound bound = 0;
                    PlainSequenceSElemDefn seq_sdefn = TypeObjectUtils::build_plain_sequence_s_elem_defn(header_anonymous_sequence_InternalSequencePoints_TypeIntrospectionExample_unbounded, bound,
                                eprosima::fastcdr::external<TypeIdentifier>(element_identifier_anonymous_sequence_InternalSequencePoints_TypeIntrospectionExample_unbounded));
                    if (eprosima::fastdds::dds::RETCODE_BAD_PARAMETER ==
                            TypeObjectUtils::build_and_register_s_sequence_type_identifier(seq_sdefn, "anonymous_sequence_InternalSequencePoints_TypeIntrospectionExample_unbounded"))
                    {
                        EPROSIMA_LOG_ERROR(XTYPES_TYPE_REPRESENTATION,
                            "anonymous_sequence_InternalSequencePoints_TypeIntrospectionExample_unbounded already registered in TypeObjectRegistry for a different type.");
                    }
                }
                else
                {
                    LBound bound = 0;
                    PlainSequenceLElemDefn seq_ldefn = TypeObjectUtils::build_plain_sequence_l_elem_defn(header_anonymous_sequence_InternalSequencePoints_TypeIntrospectionExample_unbounded, bound,
                                eprosima::fastcdr::external<TypeIdentifier>(element_identifier_anonymous_sequence_InternalSequencePoints_TypeIntrospectionExample_unbounded));
                    if (eprosima::fastdds::dds::RETCODE_BAD_PARAMETER ==
                            TypeObjectUtils::build_and_register_l_sequence_type_identifier(seq_ldefn, "anonymous_sequence_InternalSequencePoints_TypeIntrospectionExample_unbounded"))
                    {
                        EPROSIMA_LOG_ERROR(XTYPES_TYPE_REPRESENTATION,
                            "anonymous_sequence_InternalSequencePoints_TypeIntrospectionExample_unbounded already registered in TypeObjectRegistry for a different type.");
                    }
                }
                return_code_ComplexSequence_TypeIntrospectionExample =
                    eprosima::fastdds::dds::DomainParticipantFactory::get_instance()->type_object_registry().get_type_identifiers(
                    "anonymous_sequence_InternalSequencePoints_TypeIntrospectionExample_unbounded", type_ids_ComplexSequence_TypeIntrospectionExample);
                if (return_code_ComplexSequence_TypeIntrospectionExample != eprosima::fastdds::dds::RETCODE_OK)
                {
                    EPROSIMA_LOG_ERROR(XTYPES_TYPE_REPRESENTATION,
                                "anonymous_sequence_InternalSequencePoints_TypeIntrospectionExample_unbounded: Given Sequence TypeIdentifier unknown to TypeObjectRegistry.");
                    return;
                }
            }
            StructMemberFlag member_flags_internal_data = TypeObjectUtils::build_struct_member_flag(eprosima::fastdds::dds::xtypes::TryConstructKind::NOT_APPLIED,
                    false, false, false, false);
            CommonStructMember common_internal_data;
            MemberId member_id_internal_data = 0x00000001;
            if (EK_COMPLETE == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier1()._d() || TK_NONE == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier2()._d() ||
                    (TI_PLAIN_SEQUENCE_SMALL == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier1()._d() &&
                    EK_COMPLETE == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier1().seq_sdefn().header().equiv_kind()) ||
                    (TI_PLAIN_SEQUENCE_LARGE == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier1()._d() &&
                    EK_COMPLETE == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier1().seq_ldefn().header().equiv_kind()) ||
                    (TI_PLAIN_ARRAY_SMALL == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier1()._d() &&
                    EK_COMPLETE == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier1().array_sdefn().header().equiv_kind()) ||
                    (TI_PLAIN_ARRAY_LARGE == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier1()._d() &&
                    EK_COMPLETE == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier1().array_ldefn().header().equiv_kind()) ||
                    (TI_PLAIN_MAP_SMALL == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier1()._d() &&
                    (EK_COMPLETE == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier1().map_sdefn().header().equiv_kind() ||
                    EK_COMPLETE == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier1().map_sdefn().key_identifier()->_d())) ||
                    (TI_PLAIN_MAP_LARGE == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier1()._d() &&
                    (EK_COMPLETE == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier1().map_ldefn().header().equiv_kind() ||
                    EK_COMPLETE == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier1().map_ldefn().key_identifier()->_d())))
            {
                common_internal_data = TypeObjectUtils::build_common_struct_member(member_id_internal_data, member_flags_internal_data, type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier1());
            }
            else if (EK_COMPLETE == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier2()._d() ||
                    (TI_PLAIN_SEQUENCE_SMALL == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier2()._d() &&
                    EK_COMPLETE == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier2().seq_sdefn().header().equiv_kind()) ||
                    (TI_PLAIN_SEQUENCE_LARGE == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier2()._d() &&
                    EK_COMPLETE == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier2().seq_ldefn().header().equiv_kind()) ||
                    (TI_PLAIN_ARRAY_SMALL == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier2()._d() &&
                    EK_COMPLETE == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier2().array_sdefn().header().equiv_kind()) ||
                    (TI_PLAIN_ARRAY_LARGE == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier2()._d() &&
                    EK_COMPLETE == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier2().array_ldefn().header().equiv_kind()) ||
                    (TI_PLAIN_MAP_SMALL == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier2()._d() &&
                    (EK_COMPLETE == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier2().map_sdefn().header().equiv_kind() ||
                    EK_COMPLETE == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier2().map_sdefn().key_identifier()->_d())) ||
                    (TI_PLAIN_MAP_LARGE == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier2()._d() &&
                    (EK_COMPLETE == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier2().map_ldefn().header().equiv_kind() ||
                    EK_COMPLETE == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier2().map_ldefn().key_identifier()->_d())))
            {
                common_internal_data = TypeObjectUtils::build_common_struct_member(member_id_internal_data, member_flags_internal_data, type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier2());
            }
            else
            {
                EPROSIMA_LOG_ERROR(XTYPES_TYPE_REPRESENTATION,
                        "Structure internal_data member TypeIdentifier inconsistent.");
                return;
            }
            MemberName name_internal_data = "internal_data";
            eprosima::fastcdr::optional<AppliedBuiltinMemberAnnotations> member_ann_builtin_internal_data;
            ann_custom_ComplexSequence_TypeIntrospectionExample.reset();
            CompleteMemberDetail detail_internal_data = TypeObjectUtils::build_complete_member_detail(name_internal_data, member_ann_builtin_internal_data, ann_custom_ComplexSequence_TypeIntrospectionExample);
            CompleteStructMember member_internal_data = TypeObjectUtils::build_complete_struct_member(common_internal_data, detail_internal_data);
            TypeObjectUtils::add_complete_struct_member(member_seq_ComplexSequence_TypeIntrospectionExample, member_internal_data);
        }
        {
            return_code_ComplexSequence_TypeIntrospectionExample =
                eprosima::fastdds::dds::DomainParticipantFactory::get_instance()->type_object_registry().get_type_identifiers(
                "anonymous_sequence_InternalSequenceMessage_TypeIntrospectionExample_2", type_ids_ComplexSequence_TypeIntrospectionExample);

            if (return_code_ComplexSequence_TypeIntrospectionExample != eprosima::fastdds::dds::RETCODE_OK)
            {
                return_code_ComplexSequence_TypeIntrospectionExample =
                    eprosima::fastdds::dds::DomainParticipantFactory::get_instance()->type_object_registry().get_type_identifiers(
                    "InternalSequenceMessage_TypeIntrospectionExample", type_ids_ComplexSequence_TypeIntrospectionExample);

                if (return_code_ComplexSequence_TypeIntrospectionExample != eprosima::fastdds::dds::RETCODE_OK)
                {
                    {
                        StructTypeFlag struct_flags_InternalSequenceMessage_TypeIntrospectionExample = TypeObjectUtils::build_struct_type_flag(eprosima::fastdds::dds::xtypes::ExtensibilityKind::NOT_APPLIED,
                                false, false);
                        ReturnCode_t return_code_InternalSequenceMessage_TypeIntrospectionExample;
                        TypeIdentifierPair type_ids_InternalSequenceMessage_TypeIntrospectionExample;
                        QualifiedTypeName type_name_InternalSequenceMessage_TypeIntrospectionExample = "InternalSequenceMessage_TypeIntrospectionExample";
                        eprosima::fastcdr::optional<AppliedBuiltinTypeAnnotations> type_ann_builtin_InternalSequenceMessage_TypeIntrospectionExample;
                        eprosima::fastcdr::optional<AppliedAnnotationSeq> ann_custom_InternalSequenceMessage_TypeIntrospectionExample;
                        CompleteTypeDetail detail_InternalSequenceMessage_TypeIntrospectionExample = TypeObjectUtils::build_complete_type_detail(type_ann_builtin_InternalSequenceMessage_TypeIntrospectionExample, ann_custom_InternalSequenceMessage_TypeIntrospectionExample, type_name_InternalSequenceMessage_TypeIntrospectionExample.to_string());
                        CompleteStructHeader header_InternalSequenceMessage_TypeIntrospectionExample;
                        header_InternalSequenceMessage_TypeIntrospectionExample = TypeObjectUtils::build_complete_struct_header(TypeIdentifier(), detail_InternalSequenceMessage_TypeIntrospectionExample);
                        CompleteStructMemberSeq member_seq_InternalSequenceMessage_TypeIntrospectionExample;
                        {
                            return_code_InternalSequenceMessage_TypeIntrospectionExample =
                                eprosima::fastdds::dds::DomainParticipantFactory::get_instance()->type_object_registry().get_type_identifiers(
                                "anonymous_string_unbounded", type_ids_InternalSequenceMessage_TypeIntrospectionExample);

                            if (return_code_InternalSequenceMessage_TypeIntrospectionExample != eprosima::fastdds::dds::RETCODE_OK)
                            {
                                std::string type_id_kind_anonymous_string_unbounded("TI_STRING8_SMALL");
                                if (type_id_kind_anonymous_string_unbounded == "TI_STRING8_SMALL")
                                {
                                    SBound bound = 0;
                                    StringSTypeDefn string_sdefn = TypeObjectUtils::build_string_s_type_defn(bound);
                                    if (eprosima::fastdds::dds::RETCODE_BAD_PARAMETER ==
                                            TypeObjectUtils::build_and_register_s_string_type_identifier(string_sdefn,
                                            "anonymous_string_unbounded"))
                                    {
                                        EPROSIMA_LOG_ERROR(XTYPES_TYPE_REPRESENTATION,
                                            "anonymous_string_unbounded already registered in TypeObjectRegistry for a different type.");
                                    }
                                }
                                else if (type_id_kind_anonymous_string_unbounded == "TI_STRING8_LARGE")
                                {
                                    LBound bound = 255;
                                    StringLTypeDefn string_ldefn = TypeObjectUtils::build_string_l_type_defn(bound);
                                    if (eprosima::fastdds::dds::RETCODE_BAD_PARAMETER ==
                                            TypeObjectUtils::build_and_register_l_string_type_identifier(string_ldefn,
                                            "anonymous_string_unbounded"))
                                    {
                                        EPROSIMA_LOG_ERROR(XTYPES_TYPE_REPRESENTATION,
                                            "anonymous_string_unbounded already registered in TypeObjectRegistry for a different type.");
                                    }
                                }
                                else
                                {
                                    EPROSIMA_LOG_ERROR(XTYPES_TYPE_REPRESENTATION,
                                                "anonymous_string_unbounded: Unknown String kind.");
                                    return;
                                }
                                return_code_InternalSequenceMessage_TypeIntrospectionExample =
                                    eprosima::fastdds::dds::DomainParticipantFactory::get_instance()->type_object_registry().get_type_identifiers(
                                    "anonymous_string_unbounded", type_ids_InternalSequenceMessage_TypeIntrospectionExample);
                                if (return_code_InternalSequenceMessage_TypeIntrospectionExample != eprosima::fastdds::dds::RETCODE_OK)
                                {
                                    EPROSIMA_LOG_ERROR(XTYPES_TYPE_REPRESENTATION,
                                                "anonymous_string_unbounded: Given String TypeIdentifier unknown to TypeObjectRegistry.");
                                    return;
                                }
                            }
                            StructMemberFlag member_flags_message = TypeObjectUtils::build_struct_member_flag(eprosima::fastdds::dds::xtypes::TryConstructKind::NOT_APPLIED,
                                    false, false, false, false);
                            CommonStructMember common_message;
                            MemberId member_id_message = 0x00000000;
                            if (EK_COMPLETE == type_ids_InternalSequenceMessage_TypeIntrospectionExample.type_identifier1()._d() || TK_NONE == type_ids_InternalSequenceMessage_TypeIntrospectionExample.type_identifier2()._d() ||
                                    (TI_PLAIN_SEQUENCE_SMALL == type_ids_InternalSequenceMessage_TypeIntrospectionExample.type_identifier1()._d() &&
                                    EK_COMPLETE == type_ids_InternalSequenceMessage_TypeIntrospectionExample.type_identifier1().seq_sdefn().header().equiv_kind()) ||
                                    (TI_PLAIN_SEQUENCE_LARGE == type_ids_InternalSequenceMessage_TypeIntrospectionExample.type_identifier1()._d() &&
                                    EK_COMPLETE == type_ids_InternalSequenceMessage_TypeIntrospectionExample.type_identifier1().seq_ldefn().header().equiv_kind()) ||
                                    (TI_PLAIN_ARRAY_SMALL == type_ids_InternalSequenceMessage_TypeIntrospectionExample.type_identifier1()._d() &&
                                    EK_COMPLETE == type_ids_InternalSequenceMessage_TypeIntrospectionExample.type_identifier1().array_sdefn().header().equiv_kind()) ||
                                    (TI_PLAIN_ARRAY_LARGE == type_ids_InternalSequenceMessage_TypeIntrospectionExample.type_identifier1()._d() &&
                                    EK_COMPLETE == type_ids_InternalSequenceMessage_TypeIntrospectionExample.type_identifier1().array_ldefn().header().equiv_kind()) ||
                                    (TI_PLAIN_MAP_SMALL == type_ids_InternalSequenceMessage_TypeIntrospectionExample.type_identifier1()._d() &&
                                    (EK_COMPLETE == type_ids_InternalSequenceMessage_TypeIntrospectionExample.type_identifier1().map_sdefn().header().equiv_kind() ||
                                    EK_COMPLETE == type_ids_InternalSequenceMessage_TypeIntrospectionExample.type_identifier1().map_sdefn().key_identifier()->_d())) ||
                                    (TI_PLAIN_MAP_LARGE == type_ids_InternalSequenceMessage_TypeIntrospectionExample.type_identifier1()._d() &&
                                    (EK_COMPLETE == type_ids_InternalSequenceMessage_TypeIntrospectionExample.type_identifier1().map_ldefn().header().equiv_kind() ||
                                    EK_COMPLETE == type_ids_InternalSequenceMessage_TypeIntrospectionExample.type_identifier1().map_ldefn().key_identifier()->_d())))
                            {
                                common_message = TypeObjectUtils::build_common_struct_member(member_id_message, member_flags_message, type_ids_InternalSequenceMessage_TypeIntrospectionExample.type_identifier1());
                            }
                            else if (EK_COMPLETE == type_ids_InternalSequenceMessage_TypeIntrospectionExample.type_identifier2()._d() ||
                                    (TI_PLAIN_SEQUENCE_SMALL == type_ids_InternalSequenceMessage_TypeIntrospectionExample.type_identifier2()._d() &&
                                    EK_COMPLETE == type_ids_InternalSequenceMessage_TypeIntrospectionExample.type_identifier2().seq_sdefn().header().equiv_kind()) ||
                                    (TI_PLAIN_SEQUENCE_LARGE == type_ids_InternalSequenceMessage_TypeIntrospectionExample.type_identifier2()._d() &&
                                    EK_COMPLETE == type_ids_InternalSequenceMessage_TypeIntrospectionExample.type_identifier2().seq_ldefn().header().equiv_kind()) ||
                                    (TI_PLAIN_ARRAY_SMALL == type_ids_InternalSequenceMessage_TypeIntrospectionExample.type_identifier2()._d() &&
                                    EK_COMPLETE == type_ids_InternalSequenceMessage_TypeIntrospectionExample.type_identifier2().array_sdefn().header().equiv_kind()) ||
                                    (TI_PLAIN_ARRAY_LARGE == type_ids_InternalSequenceMessage_TypeIntrospectionExample.type_identifier2()._d() &&
                                    EK_COMPLETE == type_ids_InternalSequenceMessage_TypeIntrospectionExample.type_identifier2().array_ldefn().header().equiv_kind()) ||
                                    (TI_PLAIN_MAP_SMALL == type_ids_InternalSequenceMessage_TypeIntrospectionExample.type_identifier2()._d() &&
                                    (EK_COMPLETE == type_ids_InternalSequenceMessage_TypeIntrospectionExample.type_identifier2().map_sdefn().header().equiv_kind() ||
                                    EK_COMPLETE == type_ids_InternalSequenceMessage_TypeIntrospectionExample.type_identifier2().map_sdefn().key_identifier()->_d())) ||
                                    (TI_PLAIN_MAP_LARGE == type_ids_InternalSequenceMessage_TypeIntrospectionExample.type_identifier2()._d() &&
                                    (EK_COMPLETE == type_ids_InternalSequenceMessage_TypeIntrospectionExample.type_identifier2().map_ldefn().header().equiv_kind() ||
                                    EK_COMPLETE == type_ids_InternalSequenceMessage_TypeIntrospectionExample.type_identifier2().map_ldefn().key_identifier()->_d())))
                            {
                                common_message = TypeObjectUtils::build_common_struct_member(member_id_message, member_flags_message, type_ids_InternalSequenceMessage_TypeIntrospectionExample.type_identifier2());
                            }
                            else
                            {
                                EPROSIMA_LOG_ERROR(XTYPES_TYPE_REPRESENTATION,
                                        "Structure message member TypeIdentifier inconsistent.");
                                return;
                            }
                            MemberName name_message = "message";
                            eprosima::fastcdr::optional<AppliedBuiltinMemberAnnotations> member_ann_builtin_message;
                            ann_custom_InternalSequenceMessage_TypeIntrospectionExample.reset();
                            CompleteMemberDetail detail_message = TypeObjectUtils::build_complete_member_detail(name_message, member_ann_builtin_message, ann_custom_InternalSequenceMessage_TypeIntrospectionExample);
                            CompleteStructMember member_message = TypeObjectUtils::build_complete_struct_member(common_message, detail_message);
                            TypeObjectUtils::add_complete_struct_member(member_seq_InternalSequenceMessage_TypeIntrospectionExample, member_message);
                        }
                        CompleteStructType struct_type_InternalSequenceMessage_TypeIntrospectionExample = TypeObjectUtils::build_complete_struct_type(struct_flags_InternalSequenceMessage_TypeIntrospectionExample, header_InternalSequenceMessage_TypeIntrospectionExample, member_seq_InternalSequenceMessage_TypeIntrospectionExample);
                        if (eprosima::fastdds::dds::RETCODE_BAD_PARAMETER ==
                                TypeObjectUtils::build_and_register_struct_type_object(struct_type_InternalSequenceMessage_TypeIntrospectionExample, type_name_InternalSequenceMessage_TypeIntrospectionExample.to_string()))
                        {
                            EPROSIMA_LOG_ERROR(XTYPES_TYPE_REPRESENTATION,
                                    "InternalSequenceMessage_TypeIntrospectionExample already registered in TypeObjectRegistry for a different type.");
                        }
                        return_code_InternalSequenceMessage_TypeIntrospectionExample =
                            eprosima::fastdds::dds::DomainParticipantFactory::get_instance()->type_object_registry().get_type_identifiers(
                            "InternalSequenceMessage_TypeIntrospectionExample", type_ids_InternalSequenceMessage_TypeIntrospectionExample);
                        if (return_code_InternalSequenceMessage_TypeIntrospectionExample != eprosima::fastdds::dds::RETCODE_OK)
                        {
                            EPROSIMA_LOG_ERROR(XTYPES_TYPE_REPRESENTATION,
                                        "InternalSequenceMessage_TypeIntrospectionExample: Given Struct TypeIdentifier unknown to TypeObjectRegistry.");
                            return;
                        }
                    }
                }
                TypeIdentifier* element_identifier_anonymous_sequence_InternalSequenceMessage_TypeIntrospectionExample_2 {nullptr};
                if (EK_COMPLETE == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier1()._d() || TK_NONE == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier2()._d() ||
                        (TI_PLAIN_SEQUENCE_SMALL == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier1()._d() &&
                        EK_COMPLETE == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier1().seq_sdefn().header().equiv_kind()) ||
                        (TI_PLAIN_SEQUENCE_LARGE == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier1()._d() &&
                        EK_COMPLETE == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier1().seq_ldefn().header().equiv_kind()) ||
                        (TI_PLAIN_ARRAY_SMALL == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier1()._d() &&
                        EK_COMPLETE == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier1().array_sdefn().header().equiv_kind()) ||
                        (TI_PLAIN_ARRAY_LARGE == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier1()._d() &&
                        EK_COMPLETE == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier1().array_ldefn().header().equiv_kind()) ||
                        (TI_PLAIN_MAP_SMALL == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier1()._d() &&
                        (EK_COMPLETE == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier1().map_sdefn().header().equiv_kind() ||
                        EK_COMPLETE == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier1().map_sdefn().key_identifier()->_d())) ||
                        (TI_PLAIN_MAP_LARGE == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier1()._d() &&
                        (EK_COMPLETE == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier1().map_ldefn().header().equiv_kind() ||
                        EK_COMPLETE == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier1().map_ldefn().key_identifier()->_d())))
                {
                    element_identifier_anonymous_sequence_InternalSequenceMessage_TypeIntrospectionExample_2 = new TypeIdentifier(type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier1());
                }
                else if (EK_COMPLETE == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier2()._d() ||
                        (TI_PLAIN_SEQUENCE_SMALL == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier2()._d() &&
                        EK_COMPLETE == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier2().seq_sdefn().header().equiv_kind()) ||
                        (TI_PLAIN_SEQUENCE_LARGE == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier2()._d() &&
                        EK_COMPLETE == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier2().seq_ldefn().header().equiv_kind()) ||
                        (TI_PLAIN_ARRAY_SMALL == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier2()._d() &&
                        EK_COMPLETE == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier2().array_sdefn().header().equiv_kind()) ||
                        (TI_PLAIN_ARRAY_LARGE == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier2()._d() &&
                        EK_COMPLETE == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier2().array_ldefn().header().equiv_kind()) ||
                        (TI_PLAIN_MAP_SMALL == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier2()._d() &&
                        (EK_COMPLETE == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier2().map_sdefn().header().equiv_kind() ||
                        EK_COMPLETE == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier2().map_sdefn().key_identifier()->_d())) ||
                        (TI_PLAIN_MAP_LARGE == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier2()._d() &&
                        (EK_COMPLETE == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier2().map_ldefn().header().equiv_kind() ||
                        EK_COMPLETE == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier2().map_ldefn().key_identifier()->_d())))
                {
                    element_identifier_anonymous_sequence_InternalSequenceMessage_TypeIntrospectionExample_2 = new TypeIdentifier(type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier2());
                }
                else
                {
                    EPROSIMA_LOG_ERROR(XTYPES_TYPE_REPRESENTATION,
                        "Sequence element TypeIdentifier inconsistent.");
                    return;
                }
                EquivalenceKind equiv_kind_anonymous_sequence_InternalSequenceMessage_TypeIntrospectionExample_2 = EK_COMPLETE;
                if (TK_NONE == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier2()._d())
                {
                    equiv_kind_anonymous_sequence_InternalSequenceMessage_TypeIntrospectionExample_2 = EK_BOTH;
                }
                CollectionElementFlag element_flags_anonymous_sequence_InternalSequenceMessage_TypeIntrospectionExample_2 = 0;
                PlainCollectionHeader header_anonymous_sequence_InternalSequenceMessage_TypeIntrospectionExample_2 = TypeObjectUtils::build_plain_collection_header(equiv_kind_anonymous_sequence_InternalSequenceMessage_TypeIntrospectionExample_2, element_flags_anonymous_sequence_InternalSequenceMessage_TypeIntrospectionExample_2);
                std::string type_id_kind_anonymous_sequence_InternalSequenceMessage_TypeIntrospectionExample_2("TI_PLAIN_SEQUENCE_SMALL");
                if (type_id_kind_anonymous_sequence_InternalSequenceMessage_TypeIntrospectionExample_2 == "TI_PLAIN_SEQUENCE_SMALL")
                {
                    SBound bound = static_cast<SBound>(2);
                    PlainSequenceSElemDefn seq_sdefn = TypeObjectUtils::build_plain_sequence_s_elem_defn(header_anonymous_sequence_InternalSequenceMessage_TypeIntrospectionExample_2, bound,
                                eprosima::fastcdr::external<TypeIdentifier>(element_identifier_anonymous_sequence_InternalSequenceMessage_TypeIntrospectionExample_2));
                    if (eprosima::fastdds::dds::RETCODE_BAD_PARAMETER ==
                            TypeObjectUtils::build_and_register_s_sequence_type_identifier(seq_sdefn, "anonymous_sequence_InternalSequenceMessage_TypeIntrospectionExample_2"))
                    {
                        EPROSIMA_LOG_ERROR(XTYPES_TYPE_REPRESENTATION,
                            "anonymous_sequence_InternalSequenceMessage_TypeIntrospectionExample_2 already registered in TypeObjectRegistry for a different type.");
                    }
                }
                else
                {
                    LBound bound = 2;
                    PlainSequenceLElemDefn seq_ldefn = TypeObjectUtils::build_plain_sequence_l_elem_defn(header_anonymous_sequence_InternalSequenceMessage_TypeIntrospectionExample_2, bound,
                                eprosima::fastcdr::external<TypeIdentifier>(element_identifier_anonymous_sequence_InternalSequenceMessage_TypeIntrospectionExample_2));
                    if (eprosima::fastdds::dds::RETCODE_BAD_PARAMETER ==
                            TypeObjectUtils::build_and_register_l_sequence_type_identifier(seq_ldefn, "anonymous_sequence_InternalSequenceMessage_TypeIntrospectionExample_2"))
                    {
                        EPROSIMA_LOG_ERROR(XTYPES_TYPE_REPRESENTATION,
                            "anonymous_sequence_InternalSequenceMessage_TypeIntrospectionExample_2 already registered in TypeObjectRegistry for a different type.");
                    }
                }
                return_code_ComplexSequence_TypeIntrospectionExample =
                    eprosima::fastdds::dds::DomainParticipantFactory::get_instance()->type_object_registry().get_type_identifiers(
                    "anonymous_sequence_InternalSequenceMessage_TypeIntrospectionExample_2", type_ids_ComplexSequence_TypeIntrospectionExample);
                if (return_code_ComplexSequence_TypeIntrospectionExample != eprosima::fastdds::dds::RETCODE_OK)
                {
                    EPROSIMA_LOG_ERROR(XTYPES_TYPE_REPRESENTATION,
                                "anonymous_sequence_InternalSequenceMessage_TypeIntrospectionExample_2: Given Sequence TypeIdentifier unknown to TypeObjectRegistry.");
                    return;
                }
            }
            StructMemberFlag member_flags_messages = TypeObjectUtils::build_struct_member_flag(eprosima::fastdds::dds::xtypes::TryConstructKind::NOT_APPLIED,
                    false, false, false, false);
            CommonStructMember common_messages;
            MemberId member_id_messages = 0x00000002;
            if (EK_COMPLETE == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier1()._d() || TK_NONE == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier2()._d() ||
                    (TI_PLAIN_SEQUENCE_SMALL == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier1()._d() &&
                    EK_COMPLETE == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier1().seq_sdefn().header().equiv_kind()) ||
                    (TI_PLAIN_SEQUENCE_LARGE == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier1()._d() &&
                    EK_COMPLETE == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier1().seq_ldefn().header().equiv_kind()) ||
                    (TI_PLAIN_ARRAY_SMALL == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier1()._d() &&
                    EK_COMPLETE == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier1().array_sdefn().header().equiv_kind()) ||
                    (TI_PLAIN_ARRAY_LARGE == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier1()._d() &&
                    EK_COMPLETE == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier1().array_ldefn().header().equiv_kind()) ||
                    (TI_PLAIN_MAP_SMALL == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier1()._d() &&
                    (EK_COMPLETE == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier1().map_sdefn().header().equiv_kind() ||
                    EK_COMPLETE == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier1().map_sdefn().key_identifier()->_d())) ||
                    (TI_PLAIN_MAP_LARGE == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier1()._d() &&
                    (EK_COMPLETE == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier1().map_ldefn().header().equiv_kind() ||
                    EK_COMPLETE == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier1().map_ldefn().key_identifier()->_d())))
            {
                common_messages = TypeObjectUtils::build_common_struct_member(member_id_messages, member_flags_messages, type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier1());
            }
            else if (EK_COMPLETE == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier2()._d() ||
                    (TI_PLAIN_SEQUENCE_SMALL == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier2()._d() &&
                    EK_COMPLETE == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier2().seq_sdefn().header().equiv_kind()) ||
                    (TI_PLAIN_SEQUENCE_LARGE == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier2()._d() &&
                    EK_COMPLETE == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier2().seq_ldefn().header().equiv_kind()) ||
                    (TI_PLAIN_ARRAY_SMALL == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier2()._d() &&
                    EK_COMPLETE == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier2().array_sdefn().header().equiv_kind()) ||
                    (TI_PLAIN_ARRAY_LARGE == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier2()._d() &&
                    EK_COMPLETE == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier2().array_ldefn().header().equiv_kind()) ||
                    (TI_PLAIN_MAP_SMALL == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier2()._d() &&
                    (EK_COMPLETE == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier2().map_sdefn().header().equiv_kind() ||
                    EK_COMPLETE == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier2().map_sdefn().key_identifier()->_d())) ||
                    (TI_PLAIN_MAP_LARGE == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier2()._d() &&
                    (EK_COMPLETE == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier2().map_ldefn().header().equiv_kind() ||
                    EK_COMPLETE == type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier2().map_ldefn().key_identifier()->_d())))
            {
                common_messages = TypeObjectUtils::build_common_struct_member(member_id_messages, member_flags_messages, type_ids_ComplexSequence_TypeIntrospectionExample.type_identifier2());
            }
            else
            {
                EPROSIMA_LOG_ERROR(XTYPES_TYPE_REPRESENTATION,
                        "Structure messages member TypeIdentifier inconsistent.");
                return;
            }
            MemberName name_messages = "messages";
            eprosima::fastcdr::optional<AppliedBuiltinMemberAnnotations> member_ann_builtin_messages;
            ann_custom_ComplexSequence_TypeIntrospectionExample.reset();
            CompleteMemberDetail detail_messages = TypeObjectUtils::build_complete_member_detail(name_messages, member_ann_builtin_messages, ann_custom_ComplexSequence_TypeIntrospectionExample);
            CompleteStructMember member_messages = TypeObjectUtils::build_complete_struct_member(common_messages, detail_messages);
            TypeObjectUtils::add_complete_struct_member(member_seq_ComplexSequence_TypeIntrospectionExample, member_messages);
        }
        CompleteStructType struct_type_ComplexSequence_TypeIntrospectionExample = TypeObjectUtils::build_complete_struct_type(struct_flags_ComplexSequence_TypeIntrospectionExample, header_ComplexSequence_TypeIntrospectionExample, member_seq_ComplexSequence_TypeIntrospectionExample);
        if (eprosima::fastdds::dds::RETCODE_BAD_PARAMETER ==
                TypeObjectUtils::build_and_register_struct_type_object(struct_type_ComplexSequence_TypeIntrospectionExample, type_name_ComplexSequence_TypeIntrospectionExample.to_string()))
        {
            EPROSIMA_LOG_ERROR(XTYPES_TYPE_REPRESENTATION,
                    "ComplexSequence_TypeIntrospectionExample already registered in TypeObjectRegistry for a different type.");
        }
        return_code_ComplexSequence_TypeIntrospectionExample =
            eprosima::fastdds::dds::DomainParticipantFactory::get_instance()->type_object_registry().get_type_identifiers(
            "ComplexSequence_TypeIntrospectionExample", type_ids_ComplexSequence_TypeIntrospectionExample);
        if (return_code_ComplexSequence_TypeIntrospectionExample != eprosima::fastdds::dds::RETCODE_OK)
        {
            EPROSIMA_LOG_ERROR(XTYPES_TYPE_REPRESENTATION,
                        "ComplexSequence_TypeIntrospectionExample: Given Struct TypeIdentifier unknown to TypeObjectRegistry.");
            return;
        }
    }
}

