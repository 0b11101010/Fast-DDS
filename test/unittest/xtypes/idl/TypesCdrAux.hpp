// Copyright 2016 Proyectos y Sistemas de Mantenimiento SL (eProsima).
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*!
 * @file TypesCdrAux.hpp
 * This source file contains the definition of the described types in the IDL file.
 *
 * This file was generated by the tool gen.
 */

#ifndef _FAST_DDS_GENERATED_TYPESCDRAUX_HPP_
#define _FAST_DDS_GENERATED_TYPESCDRAUX_HPP_

#include "Types.h"

            constexpr uint32_t SimpleUnionStruct_max_cdr_typesize {16UL};
            constexpr uint32_t SimpleUnionStruct_max_key_cdr_typesize {0UL};

            constexpr uint32_t SequenceSequenceBoundsStruct_max_cdr_typesize {132UL};
            constexpr uint32_t SequenceSequenceBoundsStruct_max_key_cdr_typesize {0UL};


            constexpr uint32_t MyAliasEnumStruct_max_cdr_typesize {8UL};
            constexpr uint32_t MyAliasEnumStruct_max_key_cdr_typesize {0UL};

            constexpr uint32_t ArrayBadStruct_max_cdr_typesize {6UL};
            constexpr uint32_t ArrayBadStruct_max_key_cdr_typesize {0UL};

            constexpr uint32_t MapBadKeyStruct_max_cdr_typesize {24UL};
            constexpr uint32_t MapBadKeyStruct_max_key_cdr_typesize {0UL};

            constexpr uint32_t SimpleBadUnionStruct_max_cdr_typesize {16UL};
            constexpr uint32_t SimpleBadUnionStruct_max_key_cdr_typesize {0UL};

            constexpr uint32_t MyEnumStruct_max_cdr_typesize {8UL};
            constexpr uint32_t MyEnumStruct_max_key_cdr_typesize {0UL};


            constexpr uint32_t ArrayStructEqual_max_cdr_typesize {12UL};
            constexpr uint32_t ArrayStructEqual_max_key_cdr_typesize {0UL};

            constexpr uint32_t LargeWStringStruct_max_cdr_typesize {83858UL};
            constexpr uint32_t LargeWStringStruct_max_key_cdr_typesize {0UL};


            constexpr uint32_t WStringStruct_max_cdr_typesize {518UL};
            constexpr uint32_t WStringStruct_max_key_cdr_typesize {0UL};

            constexpr uint32_t SequenceStruct_max_cdr_typesize {16UL};
            constexpr uint32_t SequenceStruct_max_key_cdr_typesize {0UL};

            constexpr uint32_t SimpleTypeUnionStruct_max_cdr_typesize {16UL};
            constexpr uint32_t SimpleTypeUnionStruct_max_key_cdr_typesize {0UL};


            constexpr uint32_t ArrayDimensionsStruct_max_cdr_typesize {20UL};
            constexpr uint32_t ArrayDimensionsStruct_max_key_cdr_typesize {0UL};

            constexpr uint32_t SequenceSequenceStruct_max_cdr_typesize {48UL};
            constexpr uint32_t SequenceSequenceStruct_max_key_cdr_typesize {0UL};

            constexpr uint32_t MapBoundsStruct_max_cdr_typesize {40UL};
            constexpr uint32_t MapBoundsStruct_max_key_cdr_typesize {0UL};

            constexpr uint32_t SequenceStructEqual_max_cdr_typesize {16UL};
            constexpr uint32_t SequenceStructEqual_max_key_cdr_typesize {0UL};

            constexpr uint32_t MapStructEqual_max_cdr_typesize {24UL};
            constexpr uint32_t MapStructEqual_max_key_cdr_typesize {0UL};

            constexpr uint32_t BasicStruct_max_cdr_typesize {272UL};
            constexpr uint32_t BasicStruct_max_key_cdr_typesize {0UL};

            constexpr uint32_t SequenceBoundsStruct_max_cdr_typesize {24UL};
            constexpr uint32_t SequenceBoundsStruct_max_key_cdr_typesize {0UL};

            constexpr uint32_t MapMapStruct_max_cdr_typesize {60UL};
            constexpr uint32_t MapMapStruct_max_key_cdr_typesize {0UL};

            constexpr uint32_t BasicWideStruct_max_cdr_typesize {536UL};
            constexpr uint32_t BasicWideStruct_max_key_cdr_typesize {0UL};


            constexpr uint32_t SimplBadDiscUnionStruct_max_cdr_typesize {16UL};
            constexpr uint32_t SimplBadDiscUnionStruct_max_key_cdr_typesize {0UL};

            constexpr uint32_t MapStruct_max_cdr_typesize {24UL};
            constexpr uint32_t MapStruct_max_key_cdr_typesize {0UL};


            constexpr uint32_t MyBadEnumStruct_max_cdr_typesize {8UL};
            constexpr uint32_t MyBadEnumStruct_max_key_cdr_typesize {0UL};

            constexpr uint32_t SequenceBadStruct_max_cdr_typesize {10UL};
            constexpr uint32_t SequenceBadStruct_max_key_cdr_typesize {0UL};

            constexpr uint32_t SimpleUnionNamesStruct_max_cdr_typesize {16UL};
            constexpr uint32_t SimpleUnionNamesStruct_max_key_cdr_typesize {0UL};

            constexpr uint32_t LargeStringStruct_max_cdr_typesize {41934UL};
            constexpr uint32_t LargeStringStruct_max_key_cdr_typesize {0UL};

            constexpr uint32_t ArrayStruct_max_cdr_typesize {12UL};
            constexpr uint32_t ArrayStruct_max_key_cdr_typesize {0UL};

            constexpr uint32_t BadBasicWideStruct_max_cdr_typesize {536UL};
            constexpr uint32_t BadBasicWideStruct_max_key_cdr_typesize {0UL};

            constexpr uint32_t ArraySizeStruct_max_cdr_typesize {24UL};
            constexpr uint32_t ArraySizeStruct_max_key_cdr_typesize {0UL};


            constexpr uint32_t MapBadElemStruct_max_cdr_typesize {40UL};
            constexpr uint32_t MapBadElemStruct_max_key_cdr_typesize {0UL};

            constexpr uint32_t SimpleUnionStructEqual_max_cdr_typesize {16UL};
            constexpr uint32_t SimpleUnionStructEqual_max_key_cdr_typesize {0UL};

            constexpr uint32_t BasicBadStruct_max_cdr_typesize {272UL};
            constexpr uint32_t BasicBadStruct_max_key_cdr_typesize {0UL};

            constexpr uint32_t BasicNamesStruct_max_cdr_typesize {272UL};
            constexpr uint32_t BasicNamesStruct_max_key_cdr_typesize {0UL};

            constexpr uint32_t StringStruct_max_cdr_typesize {264UL};
            constexpr uint32_t StringStruct_max_key_cdr_typesize {0UL};


            constexpr uint32_t MapMapBoundsStruct_max_cdr_typesize {108UL};
            constexpr uint32_t MapMapBoundsStruct_max_key_cdr_typesize {0UL};

namespace eprosima {
namespace fastcdr {

class Cdr;
class CdrSizeCalculator;



eProsima_user_DllExport size_t calculate_serialized_size(
        eprosima::fastcdr::CdrSizeCalculator& calculator,
        const MyEnumStruct& data,
        size_t current_alignment);
eProsima_user_DllExport void serialize(
        eprosima::fastcdr::Cdr& scdr,
        const MyEnumStruct& data);

eProsima_user_DllExport void deserialize(
        eprosima::fastcdr::Cdr& cdr,
        MyEnumStruct& data);

eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const MyEnumStruct& data);

eProsima_user_DllExport size_t calculate_serialized_size(
        eprosima::fastcdr::CdrSizeCalculator& calculator,
        const MyBadEnumStruct& data,
        size_t current_alignment);
eProsima_user_DllExport void serialize(
        eprosima::fastcdr::Cdr& scdr,
        const MyBadEnumStruct& data);

eProsima_user_DllExport void deserialize(
        eprosima::fastcdr::Cdr& cdr,
        MyBadEnumStruct& data);

eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const MyBadEnumStruct& data);


eProsima_user_DllExport size_t calculate_serialized_size(
        eprosima::fastcdr::CdrSizeCalculator& calculator,
        const MyAliasEnumStruct& data,
        size_t current_alignment);
eProsima_user_DllExport void serialize(
        eprosima::fastcdr::Cdr& scdr,
        const MyAliasEnumStruct& data);

eProsima_user_DllExport void deserialize(
        eprosima::fastcdr::Cdr& cdr,
        MyAliasEnumStruct& data);

eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const MyAliasEnumStruct& data);

eProsima_user_DllExport size_t calculate_serialized_size(
        eprosima::fastcdr::CdrSizeCalculator& calculator,
        const BasicStruct& data,
        size_t current_alignment);
eProsima_user_DllExport void serialize(
        eprosima::fastcdr::Cdr& scdr,
        const BasicStruct& data);

eProsima_user_DllExport void deserialize(
        eprosima::fastcdr::Cdr& cdr,
        BasicStruct& data);

eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const BasicStruct& data);

eProsima_user_DllExport size_t calculate_serialized_size(
        eprosima::fastcdr::CdrSizeCalculator& calculator,
        const BasicNamesStruct& data,
        size_t current_alignment);
eProsima_user_DllExport void serialize(
        eprosima::fastcdr::Cdr& scdr,
        const BasicNamesStruct& data);

eProsima_user_DllExport void deserialize(
        eprosima::fastcdr::Cdr& cdr,
        BasicNamesStruct& data);

eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const BasicNamesStruct& data);

eProsima_user_DllExport size_t calculate_serialized_size(
        eprosima::fastcdr::CdrSizeCalculator& calculator,
        const BasicBadStruct& data,
        size_t current_alignment);
eProsima_user_DllExport void serialize(
        eprosima::fastcdr::Cdr& scdr,
        const BasicBadStruct& data);

eProsima_user_DllExport void deserialize(
        eprosima::fastcdr::Cdr& cdr,
        BasicBadStruct& data);

eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const BasicBadStruct& data);

eProsima_user_DllExport size_t calculate_serialized_size(
        eprosima::fastcdr::CdrSizeCalculator& calculator,
        const BasicWideStruct& data,
        size_t current_alignment);
eProsima_user_DllExport void serialize(
        eprosima::fastcdr::Cdr& scdr,
        const BasicWideStruct& data);

eProsima_user_DllExport void deserialize(
        eprosima::fastcdr::Cdr& cdr,
        BasicWideStruct& data);

eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const BasicWideStruct& data);

eProsima_user_DllExport size_t calculate_serialized_size(
        eprosima::fastcdr::CdrSizeCalculator& calculator,
        const BadBasicWideStruct& data,
        size_t current_alignment);
eProsima_user_DllExport void serialize(
        eprosima::fastcdr::Cdr& scdr,
        const BadBasicWideStruct& data);

eProsima_user_DllExport void deserialize(
        eprosima::fastcdr::Cdr& cdr,
        BadBasicWideStruct& data);

eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const BadBasicWideStruct& data);

eProsima_user_DllExport size_t calculate_serialized_size(
        eprosima::fastcdr::CdrSizeCalculator& calculator,
        const StringStruct& data,
        size_t current_alignment);
eProsima_user_DllExport void serialize(
        eprosima::fastcdr::Cdr& scdr,
        const StringStruct& data);

eProsima_user_DllExport void deserialize(
        eprosima::fastcdr::Cdr& cdr,
        StringStruct& data);

eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const StringStruct& data);

eProsima_user_DllExport size_t calculate_serialized_size(
        eprosima::fastcdr::CdrSizeCalculator& calculator,
        const LargeStringStruct& data,
        size_t current_alignment);
eProsima_user_DllExport void serialize(
        eprosima::fastcdr::Cdr& scdr,
        const LargeStringStruct& data);

eProsima_user_DllExport void deserialize(
        eprosima::fastcdr::Cdr& cdr,
        LargeStringStruct& data);

eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const LargeStringStruct& data);

eProsima_user_DllExport size_t calculate_serialized_size(
        eprosima::fastcdr::CdrSizeCalculator& calculator,
        const WStringStruct& data,
        size_t current_alignment);
eProsima_user_DllExport void serialize(
        eprosima::fastcdr::Cdr& scdr,
        const WStringStruct& data);

eProsima_user_DllExport void deserialize(
        eprosima::fastcdr::Cdr& cdr,
        WStringStruct& data);

eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const WStringStruct& data);

eProsima_user_DllExport size_t calculate_serialized_size(
        eprosima::fastcdr::CdrSizeCalculator& calculator,
        const LargeWStringStruct& data,
        size_t current_alignment);
eProsima_user_DllExport void serialize(
        eprosima::fastcdr::Cdr& scdr,
        const LargeWStringStruct& data);

eProsima_user_DllExport void deserialize(
        eprosima::fastcdr::Cdr& cdr,
        LargeWStringStruct& data);

eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const LargeWStringStruct& data);

eProsima_user_DllExport size_t calculate_serialized_size(
        eprosima::fastcdr::CdrSizeCalculator& calculator,
        const ArrayStruct& data,
        size_t current_alignment);
eProsima_user_DllExport void serialize(
        eprosima::fastcdr::Cdr& scdr,
        const ArrayStruct& data);

eProsima_user_DllExport void deserialize(
        eprosima::fastcdr::Cdr& cdr,
        ArrayStruct& data);

eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const ArrayStruct& data);

eProsima_user_DllExport size_t calculate_serialized_size(
        eprosima::fastcdr::CdrSizeCalculator& calculator,
        const ArrayStructEqual& data,
        size_t current_alignment);
eProsima_user_DllExport void serialize(
        eprosima::fastcdr::Cdr& scdr,
        const ArrayStructEqual& data);

eProsima_user_DllExport void deserialize(
        eprosima::fastcdr::Cdr& cdr,
        ArrayStructEqual& data);

eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const ArrayStructEqual& data);

eProsima_user_DllExport size_t calculate_serialized_size(
        eprosima::fastcdr::CdrSizeCalculator& calculator,
        const ArrayBadStruct& data,
        size_t current_alignment);
eProsima_user_DllExport void serialize(
        eprosima::fastcdr::Cdr& scdr,
        const ArrayBadStruct& data);

eProsima_user_DllExport void deserialize(
        eprosima::fastcdr::Cdr& cdr,
        ArrayBadStruct& data);

eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const ArrayBadStruct& data);

eProsima_user_DllExport size_t calculate_serialized_size(
        eprosima::fastcdr::CdrSizeCalculator& calculator,
        const ArrayDimensionsStruct& data,
        size_t current_alignment);
eProsima_user_DllExport void serialize(
        eprosima::fastcdr::Cdr& scdr,
        const ArrayDimensionsStruct& data);

eProsima_user_DllExport void deserialize(
        eprosima::fastcdr::Cdr& cdr,
        ArrayDimensionsStruct& data);

eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const ArrayDimensionsStruct& data);

eProsima_user_DllExport size_t calculate_serialized_size(
        eprosima::fastcdr::CdrSizeCalculator& calculator,
        const ArraySizeStruct& data,
        size_t current_alignment);
eProsima_user_DllExport void serialize(
        eprosima::fastcdr::Cdr& scdr,
        const ArraySizeStruct& data);

eProsima_user_DllExport void deserialize(
        eprosima::fastcdr::Cdr& cdr,
        ArraySizeStruct& data);

eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const ArraySizeStruct& data);

eProsima_user_DllExport size_t calculate_serialized_size(
        eprosima::fastcdr::CdrSizeCalculator& calculator,
        const SequenceStruct& data,
        size_t current_alignment);
eProsima_user_DllExport void serialize(
        eprosima::fastcdr::Cdr& scdr,
        const SequenceStruct& data);

eProsima_user_DllExport void deserialize(
        eprosima::fastcdr::Cdr& cdr,
        SequenceStruct& data);

eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const SequenceStruct& data);

eProsima_user_DllExport size_t calculate_serialized_size(
        eprosima::fastcdr::CdrSizeCalculator& calculator,
        const SequenceStructEqual& data,
        size_t current_alignment);
eProsima_user_DllExport void serialize(
        eprosima::fastcdr::Cdr& scdr,
        const SequenceStructEqual& data);

eProsima_user_DllExport void deserialize(
        eprosima::fastcdr::Cdr& cdr,
        SequenceStructEqual& data);

eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const SequenceStructEqual& data);

eProsima_user_DllExport size_t calculate_serialized_size(
        eprosima::fastcdr::CdrSizeCalculator& calculator,
        const SequenceBadStruct& data,
        size_t current_alignment);
eProsima_user_DllExport void serialize(
        eprosima::fastcdr::Cdr& scdr,
        const SequenceBadStruct& data);

eProsima_user_DllExport void deserialize(
        eprosima::fastcdr::Cdr& cdr,
        SequenceBadStruct& data);

eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const SequenceBadStruct& data);

eProsima_user_DllExport size_t calculate_serialized_size(
        eprosima::fastcdr::CdrSizeCalculator& calculator,
        const SequenceBoundsStruct& data,
        size_t current_alignment);
eProsima_user_DllExport void serialize(
        eprosima::fastcdr::Cdr& scdr,
        const SequenceBoundsStruct& data);

eProsima_user_DllExport void deserialize(
        eprosima::fastcdr::Cdr& cdr,
        SequenceBoundsStruct& data);

eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const SequenceBoundsStruct& data);

eProsima_user_DllExport size_t calculate_serialized_size(
        eprosima::fastcdr::CdrSizeCalculator& calculator,
        const SequenceSequenceStruct& data,
        size_t current_alignment);
eProsima_user_DllExport void serialize(
        eprosima::fastcdr::Cdr& scdr,
        const SequenceSequenceStruct& data);

eProsima_user_DllExport void deserialize(
        eprosima::fastcdr::Cdr& cdr,
        SequenceSequenceStruct& data);

eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const SequenceSequenceStruct& data);

eProsima_user_DllExport size_t calculate_serialized_size(
        eprosima::fastcdr::CdrSizeCalculator& calculator,
        const SequenceSequenceBoundsStruct& data,
        size_t current_alignment);
eProsima_user_DllExport void serialize(
        eprosima::fastcdr::Cdr& scdr,
        const SequenceSequenceBoundsStruct& data);

eProsima_user_DllExport void deserialize(
        eprosima::fastcdr::Cdr& cdr,
        SequenceSequenceBoundsStruct& data);

eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const SequenceSequenceBoundsStruct& data);

eProsima_user_DllExport size_t calculate_serialized_size(
        eprosima::fastcdr::CdrSizeCalculator& calculator,
        const MapStruct& data,
        size_t current_alignment);
eProsima_user_DllExport void serialize(
        eprosima::fastcdr::Cdr& scdr,
        const MapStruct& data);

eProsima_user_DllExport void deserialize(
        eprosima::fastcdr::Cdr& cdr,
        MapStruct& data);

eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const MapStruct& data);

eProsima_user_DllExport size_t calculate_serialized_size(
        eprosima::fastcdr::CdrSizeCalculator& calculator,
        const MapStructEqual& data,
        size_t current_alignment);
eProsima_user_DllExport void serialize(
        eprosima::fastcdr::Cdr& scdr,
        const MapStructEqual& data);

eProsima_user_DllExport void deserialize(
        eprosima::fastcdr::Cdr& cdr,
        MapStructEqual& data);

eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const MapStructEqual& data);

eProsima_user_DllExport size_t calculate_serialized_size(
        eprosima::fastcdr::CdrSizeCalculator& calculator,
        const MapBadKeyStruct& data,
        size_t current_alignment);
eProsima_user_DllExport void serialize(
        eprosima::fastcdr::Cdr& scdr,
        const MapBadKeyStruct& data);

eProsima_user_DllExport void deserialize(
        eprosima::fastcdr::Cdr& cdr,
        MapBadKeyStruct& data);

eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const MapBadKeyStruct& data);

eProsima_user_DllExport size_t calculate_serialized_size(
        eprosima::fastcdr::CdrSizeCalculator& calculator,
        const MapBadElemStruct& data,
        size_t current_alignment);
eProsima_user_DllExport void serialize(
        eprosima::fastcdr::Cdr& scdr,
        const MapBadElemStruct& data);

eProsima_user_DllExport void deserialize(
        eprosima::fastcdr::Cdr& cdr,
        MapBadElemStruct& data);

eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const MapBadElemStruct& data);

eProsima_user_DllExport size_t calculate_serialized_size(
        eprosima::fastcdr::CdrSizeCalculator& calculator,
        const MapBoundsStruct& data,
        size_t current_alignment);
eProsima_user_DllExport void serialize(
        eprosima::fastcdr::Cdr& scdr,
        const MapBoundsStruct& data);

eProsima_user_DllExport void deserialize(
        eprosima::fastcdr::Cdr& cdr,
        MapBoundsStruct& data);

eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const MapBoundsStruct& data);

eProsima_user_DllExport size_t calculate_serialized_size(
        eprosima::fastcdr::CdrSizeCalculator& calculator,
        const MapMapStruct& data,
        size_t current_alignment);
eProsima_user_DllExport void serialize(
        eprosima::fastcdr::Cdr& scdr,
        const MapMapStruct& data);

eProsima_user_DllExport void deserialize(
        eprosima::fastcdr::Cdr& cdr,
        MapMapStruct& data);

eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const MapMapStruct& data);

eProsima_user_DllExport size_t calculate_serialized_size(
        eprosima::fastcdr::CdrSizeCalculator& calculator,
        const MapMapBoundsStruct& data,
        size_t current_alignment);
eProsima_user_DllExport void serialize(
        eprosima::fastcdr::Cdr& scdr,
        const MapMapBoundsStruct& data);

eProsima_user_DllExport void deserialize(
        eprosima::fastcdr::Cdr& cdr,
        MapMapBoundsStruct& data);

eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const MapMapBoundsStruct& data);

eProsima_user_DllExport size_t calculate_serialized_size(
        eprosima::fastcdr::CdrSizeCalculator& calculator,
        const SimpleUnion& data,
        size_t current_alignment);

eProsima_user_DllExport void serialize(
        eprosima::fastcdr::Cdr& scdr,
        const SimpleUnion& data);

eProsima_user_DllExport void deserialize(
        eprosima::fastcdr::Cdr& cdr,
        SimpleUnion& data);
eProsima_user_DllExport size_t calculate_serialized_size(
        eprosima::fastcdr::CdrSizeCalculator& calculator,
        const SimpleUnionNames& data,
        size_t current_alignment);

eProsima_user_DllExport void serialize(
        eprosima::fastcdr::Cdr& scdr,
        const SimpleUnionNames& data);

eProsima_user_DllExport void deserialize(
        eprosima::fastcdr::Cdr& cdr,
        SimpleUnionNames& data);
eProsima_user_DllExport size_t calculate_serialized_size(
        eprosima::fastcdr::CdrSizeCalculator& calculator,
        const SimpleTypeUnion& data,
        size_t current_alignment);

eProsima_user_DllExport void serialize(
        eprosima::fastcdr::Cdr& scdr,
        const SimpleTypeUnion& data);

eProsima_user_DllExport void deserialize(
        eprosima::fastcdr::Cdr& cdr,
        SimpleTypeUnion& data);
eProsima_user_DllExport size_t calculate_serialized_size(
        eprosima::fastcdr::CdrSizeCalculator& calculator,
        const SimpleBadUnion& data,
        size_t current_alignment);

eProsima_user_DllExport void serialize(
        eprosima::fastcdr::Cdr& scdr,
        const SimpleBadUnion& data);

eProsima_user_DllExport void deserialize(
        eprosima::fastcdr::Cdr& cdr,
        SimpleBadUnion& data);
eProsima_user_DllExport size_t calculate_serialized_size(
        eprosima::fastcdr::CdrSizeCalculator& calculator,
        const SimpleBadDiscUnion& data,
        size_t current_alignment);

eProsima_user_DllExport void serialize(
        eprosima::fastcdr::Cdr& scdr,
        const SimpleBadDiscUnion& data);

eProsima_user_DllExport void deserialize(
        eprosima::fastcdr::Cdr& cdr,
        SimpleBadDiscUnion& data);
eProsima_user_DllExport size_t calculate_serialized_size(
        eprosima::fastcdr::CdrSizeCalculator& calculator,
        const SimpleUnionStruct& data,
        size_t current_alignment);
eProsima_user_DllExport void serialize(
        eprosima::fastcdr::Cdr& scdr,
        const SimpleUnionStruct& data);

eProsima_user_DllExport void deserialize(
        eprosima::fastcdr::Cdr& cdr,
        SimpleUnionStruct& data);

eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const SimpleUnionStruct& data);

eProsima_user_DllExport size_t calculate_serialized_size(
        eprosima::fastcdr::CdrSizeCalculator& calculator,
        const SimpleUnionStructEqual& data,
        size_t current_alignment);
eProsima_user_DllExport void serialize(
        eprosima::fastcdr::Cdr& scdr,
        const SimpleUnionStructEqual& data);

eProsima_user_DllExport void deserialize(
        eprosima::fastcdr::Cdr& cdr,
        SimpleUnionStructEqual& data);

eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const SimpleUnionStructEqual& data);

eProsima_user_DllExport size_t calculate_serialized_size(
        eprosima::fastcdr::CdrSizeCalculator& calculator,
        const SimpleUnionNamesStruct& data,
        size_t current_alignment);
eProsima_user_DllExport void serialize(
        eprosima::fastcdr::Cdr& scdr,
        const SimpleUnionNamesStruct& data);

eProsima_user_DllExport void deserialize(
        eprosima::fastcdr::Cdr& cdr,
        SimpleUnionNamesStruct& data);

eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const SimpleUnionNamesStruct& data);

eProsima_user_DllExport size_t calculate_serialized_size(
        eprosima::fastcdr::CdrSizeCalculator& calculator,
        const SimpleTypeUnionStruct& data,
        size_t current_alignment);
eProsima_user_DllExport void serialize(
        eprosima::fastcdr::Cdr& scdr,
        const SimpleTypeUnionStruct& data);

eProsima_user_DllExport void deserialize(
        eprosima::fastcdr::Cdr& cdr,
        SimpleTypeUnionStruct& data);

eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const SimpleTypeUnionStruct& data);

eProsima_user_DllExport size_t calculate_serialized_size(
        eprosima::fastcdr::CdrSizeCalculator& calculator,
        const SimpleBadUnionStruct& data,
        size_t current_alignment);
eProsima_user_DllExport void serialize(
        eprosima::fastcdr::Cdr& scdr,
        const SimpleBadUnionStruct& data);

eProsima_user_DllExport void deserialize(
        eprosima::fastcdr::Cdr& cdr,
        SimpleBadUnionStruct& data);

eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const SimpleBadUnionStruct& data);

eProsima_user_DllExport size_t calculate_serialized_size(
        eprosima::fastcdr::CdrSizeCalculator& calculator,
        const SimplBadDiscUnionStruct& data,
        size_t current_alignment);
eProsima_user_DllExport void serialize(
        eprosima::fastcdr::Cdr& scdr,
        const SimplBadDiscUnionStruct& data);

eProsima_user_DllExport void deserialize(
        eprosima::fastcdr::Cdr& cdr,
        SimplBadDiscUnionStruct& data);

eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const SimplBadDiscUnionStruct& data);


} // namespace fastcdr
} // namespace eprosima

#endif // _FAST_DDS_GENERATED_TYPESCDRAUX_HPP_