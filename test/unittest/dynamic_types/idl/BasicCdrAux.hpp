// Copyright 2016 Proyectos y Sistemas de Mantenimiento SL (eProsima).
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*!
 * @file BasicCdrAux.hpp
 * This source file contains the definition of the described types in the IDL file.
 *
 * This file was generated by the tool gen.
 */

#ifndef _FAST_DDS_GENERATED_BASICCDRAUX_HPP_
#define _FAST_DDS_GENERATED_BASICCDRAUX_HPP_

#include "Basic.h"

            constexpr uint32_t ArraytStruct_max_cdr_typesize {36UL};
            constexpr uint32_t ArraytStruct_max_key_cdr_typesize {0UL};

            constexpr uint32_t SimpleUnionStruct_max_cdr_typesize {16UL};
            constexpr uint32_t SimpleUnionStruct_max_key_cdr_typesize {0UL};


            constexpr uint32_t WCharUnionStruct_max_cdr_typesize {16UL};
            constexpr uint32_t WCharUnionStruct_max_key_cdr_typesize {0UL};

            constexpr uint32_t OctetStruct_max_cdr_typesize {5UL};
            constexpr uint32_t OctetStruct_max_key_cdr_typesize {0UL};

            constexpr uint32_t LongStruct_max_cdr_typesize {8UL};
            constexpr uint32_t LongStruct_max_key_cdr_typesize {0UL};

            constexpr uint32_t EnumStruct_max_cdr_typesize {8UL};
            constexpr uint32_t EnumStruct_max_key_cdr_typesize {0UL};

            constexpr uint32_t BitsetStruct_max_cdr_typesize {12UL};
            constexpr uint32_t BitsetStruct_max_key_cdr_typesize {0UL};



            constexpr uint32_t DoubleStruct_max_cdr_typesize {16UL};
            constexpr uint32_t DoubleStruct_max_key_cdr_typesize {0UL};

            constexpr uint32_t LargeWStringStruct_max_cdr_typesize {167708UL};
            constexpr uint32_t LargeWStringStruct_max_key_cdr_typesize {0UL};

            constexpr uint32_t WCharStruct_max_cdr_typesize {8UL};
            constexpr uint32_t WCharStruct_max_key_cdr_typesize {0UL};


            constexpr uint32_t WStringStruct_max_cdr_typesize {1028UL};
            constexpr uint32_t WStringStruct_max_key_cdr_typesize {0UL};

            constexpr uint32_t SequenceStruct_max_cdr_typesize {16UL};
            constexpr uint32_t SequenceStruct_max_key_cdr_typesize {0UL};


            constexpr uint32_t ULongStruct_max_cdr_typesize {8UL};
            constexpr uint32_t ULongStruct_max_key_cdr_typesize {0UL};

            constexpr uint32_t SequenceSequenceStruct_max_cdr_typesize {48UL};
            constexpr uint32_t SequenceSequenceStruct_max_key_cdr_typesize {0UL};

            constexpr uint32_t FloatStruct_max_cdr_typesize {8UL};
            constexpr uint32_t FloatStruct_max_key_cdr_typesize {0UL};

            constexpr uint32_t LongDoubleStruct_max_cdr_typesize {24UL};
            constexpr uint32_t LongDoubleStruct_max_key_cdr_typesize {0UL};

            constexpr uint32_t StructStructStruct_max_cdr_typesize {32UL};
            constexpr uint32_t StructStructStruct_max_key_cdr_typesize {0UL};

            constexpr uint32_t UnionUnionUnionStruct_max_cdr_typesize {24UL};
            constexpr uint32_t UnionUnionUnionStruct_max_key_cdr_typesize {0UL};

            constexpr uint32_t BoolStruct_max_cdr_typesize {5UL};
            constexpr uint32_t BoolStruct_max_key_cdr_typesize {0UL};

            constexpr uint32_t MapMapStruct_max_cdr_typesize {60UL};
            constexpr uint32_t MapMapStruct_max_key_cdr_typesize {0UL};

            constexpr uint32_t AliasAliasStruct_max_cdr_typesize {8UL};
            constexpr uint32_t AliasAliasStruct_max_key_cdr_typesize {0UL};

            constexpr uint32_t ArrayArrayStruct_max_cdr_typesize {72UL};
            constexpr uint32_t ArrayArrayStruct_max_key_cdr_typesize {0UL};

            constexpr uint32_t ShortStruct_max_cdr_typesize {6UL};
            constexpr uint32_t ShortStruct_max_key_cdr_typesize {0UL};

            constexpr uint32_t MapStruct_max_cdr_typesize {24UL};
            constexpr uint32_t MapStruct_max_key_cdr_typesize {0UL};

            constexpr uint32_t UShortStruct_max_cdr_typesize {6UL};
            constexpr uint32_t UShortStruct_max_key_cdr_typesize {0UL};



            constexpr uint32_t ULongLongStruct_max_cdr_typesize {16UL};
            constexpr uint32_t ULongLongStruct_max_key_cdr_typesize {0UL};

            constexpr uint32_t AliasStruct_max_cdr_typesize {8UL};
            constexpr uint32_t AliasStruct_max_key_cdr_typesize {0UL};

            constexpr uint32_t LargeStringStruct_max_cdr_typesize {41934UL};
            constexpr uint32_t LargeStringStruct_max_key_cdr_typesize {0UL};

            constexpr uint32_t CharStruct_max_cdr_typesize {5UL};
            constexpr uint32_t CharStruct_max_key_cdr_typesize {0UL};

            constexpr uint32_t LongLongStruct_max_cdr_typesize {16UL};
            constexpr uint32_t LongLongStruct_max_key_cdr_typesize {0UL};

            constexpr uint32_t StringStruct_max_cdr_typesize {264UL};
            constexpr uint32_t StringStruct_max_key_cdr_typesize {0UL};

            constexpr uint32_t StructStruct_max_cdr_typesize {16UL};
            constexpr uint32_t StructStruct_max_key_cdr_typesize {0UL};


namespace eprosima {
namespace fastcdr {

class Cdr;
class CdrSizeCalculator;




size_t calculate_serialized_size(
        eprosima::fastcdr::CdrSizeCalculator& calculator,
        const EnumStruct& data,
        size_t current_alignment);
void serialize(
        eprosima::fastcdr::Cdr& scdr,
        const EnumStruct& data);

void deserialize(
        eprosima::fastcdr::Cdr& cdr,
        EnumStruct& data);

void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const EnumStruct& data);

size_t calculate_serialized_size(
        eprosima::fastcdr::CdrSizeCalculator& calculator,
        const AliasStruct& data,
        size_t current_alignment);
void serialize(
        eprosima::fastcdr::Cdr& scdr,
        const AliasStruct& data);

void deserialize(
        eprosima::fastcdr::Cdr& cdr,
        AliasStruct& data);

void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const AliasStruct& data);

size_t calculate_serialized_size(
        eprosima::fastcdr::CdrSizeCalculator& calculator,
        const AliasAliasStruct& data,
        size_t current_alignment);
void serialize(
        eprosima::fastcdr::Cdr& scdr,
        const AliasAliasStruct& data);

void deserialize(
        eprosima::fastcdr::Cdr& cdr,
        AliasAliasStruct& data);

void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const AliasAliasStruct& data);

size_t calculate_serialized_size(
        eprosima::fastcdr::CdrSizeCalculator& calculator,
        const BoolStruct& data,
        size_t current_alignment);
void serialize(
        eprosima::fastcdr::Cdr& scdr,
        const BoolStruct& data);

void deserialize(
        eprosima::fastcdr::Cdr& cdr,
        BoolStruct& data);

void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const BoolStruct& data);

size_t calculate_serialized_size(
        eprosima::fastcdr::CdrSizeCalculator& calculator,
        const OctetStruct& data,
        size_t current_alignment);
void serialize(
        eprosima::fastcdr::Cdr& scdr,
        const OctetStruct& data);

void deserialize(
        eprosima::fastcdr::Cdr& cdr,
        OctetStruct& data);

void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const OctetStruct& data);

size_t calculate_serialized_size(
        eprosima::fastcdr::CdrSizeCalculator& calculator,
        const ShortStruct& data,
        size_t current_alignment);
void serialize(
        eprosima::fastcdr::Cdr& scdr,
        const ShortStruct& data);

void deserialize(
        eprosima::fastcdr::Cdr& cdr,
        ShortStruct& data);

void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const ShortStruct& data);

size_t calculate_serialized_size(
        eprosima::fastcdr::CdrSizeCalculator& calculator,
        const LongStruct& data,
        size_t current_alignment);
void serialize(
        eprosima::fastcdr::Cdr& scdr,
        const LongStruct& data);

void deserialize(
        eprosima::fastcdr::Cdr& cdr,
        LongStruct& data);

void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const LongStruct& data);

size_t calculate_serialized_size(
        eprosima::fastcdr::CdrSizeCalculator& calculator,
        const LongLongStruct& data,
        size_t current_alignment);
void serialize(
        eprosima::fastcdr::Cdr& scdr,
        const LongLongStruct& data);

void deserialize(
        eprosima::fastcdr::Cdr& cdr,
        LongLongStruct& data);

void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const LongLongStruct& data);

size_t calculate_serialized_size(
        eprosima::fastcdr::CdrSizeCalculator& calculator,
        const UShortStruct& data,
        size_t current_alignment);
void serialize(
        eprosima::fastcdr::Cdr& scdr,
        const UShortStruct& data);

void deserialize(
        eprosima::fastcdr::Cdr& cdr,
        UShortStruct& data);

void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const UShortStruct& data);

size_t calculate_serialized_size(
        eprosima::fastcdr::CdrSizeCalculator& calculator,
        const ULongStruct& data,
        size_t current_alignment);
void serialize(
        eprosima::fastcdr::Cdr& scdr,
        const ULongStruct& data);

void deserialize(
        eprosima::fastcdr::Cdr& cdr,
        ULongStruct& data);

void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const ULongStruct& data);

size_t calculate_serialized_size(
        eprosima::fastcdr::CdrSizeCalculator& calculator,
        const ULongLongStruct& data,
        size_t current_alignment);
void serialize(
        eprosima::fastcdr::Cdr& scdr,
        const ULongLongStruct& data);

void deserialize(
        eprosima::fastcdr::Cdr& cdr,
        ULongLongStruct& data);

void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const ULongLongStruct& data);

size_t calculate_serialized_size(
        eprosima::fastcdr::CdrSizeCalculator& calculator,
        const FloatStruct& data,
        size_t current_alignment);
void serialize(
        eprosima::fastcdr::Cdr& scdr,
        const FloatStruct& data);

void deserialize(
        eprosima::fastcdr::Cdr& cdr,
        FloatStruct& data);

void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const FloatStruct& data);

size_t calculate_serialized_size(
        eprosima::fastcdr::CdrSizeCalculator& calculator,
        const DoubleStruct& data,
        size_t current_alignment);
void serialize(
        eprosima::fastcdr::Cdr& scdr,
        const DoubleStruct& data);

void deserialize(
        eprosima::fastcdr::Cdr& cdr,
        DoubleStruct& data);

void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const DoubleStruct& data);

size_t calculate_serialized_size(
        eprosima::fastcdr::CdrSizeCalculator& calculator,
        const LongDoubleStruct& data,
        size_t current_alignment);
void serialize(
        eprosima::fastcdr::Cdr& scdr,
        const LongDoubleStruct& data);

void deserialize(
        eprosima::fastcdr::Cdr& cdr,
        LongDoubleStruct& data);

void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const LongDoubleStruct& data);

size_t calculate_serialized_size(
        eprosima::fastcdr::CdrSizeCalculator& calculator,
        const CharStruct& data,
        size_t current_alignment);
void serialize(
        eprosima::fastcdr::Cdr& scdr,
        const CharStruct& data);

void deserialize(
        eprosima::fastcdr::Cdr& cdr,
        CharStruct& data);

void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const CharStruct& data);

size_t calculate_serialized_size(
        eprosima::fastcdr::CdrSizeCalculator& calculator,
        const WCharStruct& data,
        size_t current_alignment);
void serialize(
        eprosima::fastcdr::Cdr& scdr,
        const WCharStruct& data);

void deserialize(
        eprosima::fastcdr::Cdr& cdr,
        WCharStruct& data);

void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const WCharStruct& data);

size_t calculate_serialized_size(
        eprosima::fastcdr::CdrSizeCalculator& calculator,
        const StringStruct& data,
        size_t current_alignment);
void serialize(
        eprosima::fastcdr::Cdr& scdr,
        const StringStruct& data);

void deserialize(
        eprosima::fastcdr::Cdr& cdr,
        StringStruct& data);

void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const StringStruct& data);

size_t calculate_serialized_size(
        eprosima::fastcdr::CdrSizeCalculator& calculator,
        const WStringStruct& data,
        size_t current_alignment);
void serialize(
        eprosima::fastcdr::Cdr& scdr,
        const WStringStruct& data);

void deserialize(
        eprosima::fastcdr::Cdr& cdr,
        WStringStruct& data);

void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const WStringStruct& data);

size_t calculate_serialized_size(
        eprosima::fastcdr::CdrSizeCalculator& calculator,
        const LargeStringStruct& data,
        size_t current_alignment);
void serialize(
        eprosima::fastcdr::Cdr& scdr,
        const LargeStringStruct& data);

void deserialize(
        eprosima::fastcdr::Cdr& cdr,
        LargeStringStruct& data);

void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const LargeStringStruct& data);

size_t calculate_serialized_size(
        eprosima::fastcdr::CdrSizeCalculator& calculator,
        const LargeWStringStruct& data,
        size_t current_alignment);
void serialize(
        eprosima::fastcdr::Cdr& scdr,
        const LargeWStringStruct& data);

void deserialize(
        eprosima::fastcdr::Cdr& cdr,
        LargeWStringStruct& data);

void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const LargeWStringStruct& data);

size_t calculate_serialized_size(
        eprosima::fastcdr::CdrSizeCalculator& calculator,
        const ArraytStruct& data,
        size_t current_alignment);
void serialize(
        eprosima::fastcdr::Cdr& scdr,
        const ArraytStruct& data);

void deserialize(
        eprosima::fastcdr::Cdr& cdr,
        ArraytStruct& data);

void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const ArraytStruct& data);


size_t calculate_serialized_size(
        eprosima::fastcdr::CdrSizeCalculator& calculator,
        const ArrayArrayStruct& data,
        size_t current_alignment);
void serialize(
        eprosima::fastcdr::Cdr& scdr,
        const ArrayArrayStruct& data);

void deserialize(
        eprosima::fastcdr::Cdr& cdr,
        ArrayArrayStruct& data);

void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const ArrayArrayStruct& data);

size_t calculate_serialized_size(
        eprosima::fastcdr::CdrSizeCalculator& calculator,
        const SequenceStruct& data,
        size_t current_alignment);
void serialize(
        eprosima::fastcdr::Cdr& scdr,
        const SequenceStruct& data);

void deserialize(
        eprosima::fastcdr::Cdr& cdr,
        SequenceStruct& data);

void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const SequenceStruct& data);

size_t calculate_serialized_size(
        eprosima::fastcdr::CdrSizeCalculator& calculator,
        const SequenceSequenceStruct& data,
        size_t current_alignment);
void serialize(
        eprosima::fastcdr::Cdr& scdr,
        const SequenceSequenceStruct& data);

void deserialize(
        eprosima::fastcdr::Cdr& cdr,
        SequenceSequenceStruct& data);

void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const SequenceSequenceStruct& data);

size_t calculate_serialized_size(
        eprosima::fastcdr::CdrSizeCalculator& calculator,
        const MapStruct& data,
        size_t current_alignment);
void serialize(
        eprosima::fastcdr::Cdr& scdr,
        const MapStruct& data);

void deserialize(
        eprosima::fastcdr::Cdr& cdr,
        MapStruct& data);

void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const MapStruct& data);

size_t calculate_serialized_size(
        eprosima::fastcdr::CdrSizeCalculator& calculator,
        const MapMapStruct& data,
        size_t current_alignment);
void serialize(
        eprosima::fastcdr::Cdr& scdr,
        const MapMapStruct& data);

void deserialize(
        eprosima::fastcdr::Cdr& cdr,
        MapMapStruct& data);

void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const MapMapStruct& data);

size_t calculate_serialized_size(
        eprosima::fastcdr::CdrSizeCalculator& calculator,
        const MyBitset& ,
        size_t current_alignment);
void serialize(
        eprosima::fastcdr::Cdr& scdr,
        const MyBitset& data);

void deserialize(
        eprosima::fastcdr::Cdr& dcdr,
        MyBitset& data);
size_t calculate_serialized_size(
        eprosima::fastcdr::CdrSizeCalculator& calculator,
        const BitsetStruct& data,
        size_t current_alignment);
void serialize(
        eprosima::fastcdr::Cdr& scdr,
        const BitsetStruct& data);

void deserialize(
        eprosima::fastcdr::Cdr& cdr,
        BitsetStruct& data);

void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const BitsetStruct& data);

size_t calculate_serialized_size(
        eprosima::fastcdr::CdrSizeCalculator& calculator,
        const StructStruct& data,
        size_t current_alignment);
void serialize(
        eprosima::fastcdr::Cdr& scdr,
        const StructStruct& data);

void deserialize(
        eprosima::fastcdr::Cdr& cdr,
        StructStruct& data);

void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const StructStruct& data);

size_t calculate_serialized_size(
        eprosima::fastcdr::CdrSizeCalculator& calculator,
        const StructStructStruct& data,
        size_t current_alignment);
void serialize(
        eprosima::fastcdr::Cdr& scdr,
        const StructStructStruct& data);

void deserialize(
        eprosima::fastcdr::Cdr& cdr,
        StructStructStruct& data);

void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const StructStructStruct& data);

size_t calculate_serialized_size(
        eprosima::fastcdr::CdrSizeCalculator& calculator,
        const SimpleUnion& data,
        size_t current_alignment);

void serialize(
        eprosima::fastcdr::Cdr& scdr,
        const SimpleUnion& data);

void deserialize(
        eprosima::fastcdr::Cdr& cdr,
        SimpleUnion& data);
size_t calculate_serialized_size(
        eprosima::fastcdr::CdrSizeCalculator& calculator,
        const UnionUnion& data,
        size_t current_alignment);

void serialize(
        eprosima::fastcdr::Cdr& scdr,
        const UnionUnion& data);

void deserialize(
        eprosima::fastcdr::Cdr& cdr,
        UnionUnion& data);
size_t calculate_serialized_size(
        eprosima::fastcdr::CdrSizeCalculator& calculator,
        const WCharUnion& data,
        size_t current_alignment);

void serialize(
        eprosima::fastcdr::Cdr& scdr,
        const WCharUnion& data);

void deserialize(
        eprosima::fastcdr::Cdr& cdr,
        WCharUnion& data);
size_t calculate_serialized_size(
        eprosima::fastcdr::CdrSizeCalculator& calculator,
        const SimpleUnionStruct& data,
        size_t current_alignment);
void serialize(
        eprosima::fastcdr::Cdr& scdr,
        const SimpleUnionStruct& data);

void deserialize(
        eprosima::fastcdr::Cdr& cdr,
        SimpleUnionStruct& data);

void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const SimpleUnionStruct& data);

size_t calculate_serialized_size(
        eprosima::fastcdr::CdrSizeCalculator& calculator,
        const UnionUnionUnionStruct& data,
        size_t current_alignment);
void serialize(
        eprosima::fastcdr::Cdr& scdr,
        const UnionUnionUnionStruct& data);

void deserialize(
        eprosima::fastcdr::Cdr& cdr,
        UnionUnionUnionStruct& data);

void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const UnionUnionUnionStruct& data);

size_t calculate_serialized_size(
        eprosima::fastcdr::CdrSizeCalculator& calculator,
        const WCharUnionStruct& data,
        size_t current_alignment);
void serialize(
        eprosima::fastcdr::Cdr& scdr,
        const WCharUnionStruct& data);

void deserialize(
        eprosima::fastcdr::Cdr& cdr,
        WCharUnionStruct& data);

void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const WCharUnionStruct& data);


} // namespace fastcdr
} // namespace eprosima

#endif // _FAST_DDS_GENERATED_BASICCDRAUX_HPP_